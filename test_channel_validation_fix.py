import requests
import json

def test_channel_validation():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∫–∞–Ω–∞–ª–æ–≤"""
    
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∫–∞–Ω–∞–ª–∞ @GPTMainNew...")
    
    # –¢–µ—Å—Ç 1: @GPTMainNew
    test_data = {"channel_input": "@GPTMainNew"}
    
    try:
        response = requests.post(
            "http://localhost:8000/api/channels/validate",
            json=test_data,
            headers={"Content-Type": "application/json"}
        )
        
        print(f"Status Code: {response.status_code}")
        result = response.json()
        print("–û—Ç–≤–µ—Ç API:")
        print(json.dumps(result, indent=2, ensure_ascii=False))
        
        if result.get('success'):
            print("‚úÖ –ö–∞–Ω–∞–ª –Ω–∞–π–¥–µ–Ω!")
            print(f"–ù–∞–∑–≤–∞–Ω–∏–µ: {result['data']['title']}")
            print(f"Username: {result['data']['username']}")
            print(f"Telegram ID: {result['data']['telegram_id']}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {result.get('error')}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
    
    print("\n" + "="*50)
    
    # –¢–µ—Å—Ç 2: –î—Ä—É–≥–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –Ω–∞–ø–∏—Å–∞–Ω–∏—è
    test_cases = [
        "@gptmainnew",  # –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ
        "GPTMainNew",   # –±–µ–∑ @
        "gptmainnew",   # –±–µ–∑ @ –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ
    ]
    
    for test_case in test_cases:
        print(f"\nüîç –¢–µ—Å—Ç–∏—Ä—É—é: {test_case}")
        try:
            response = requests.post(
                "http://localhost:8000/api/channels/validate",
                json={"channel_input": test_case},
                headers={"Content-Type": "application/json"}
            )
            
            result = response.json()
            if result.get('success'):
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω: {result['data']['title']} ({result['data']['username']})")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞: {result.get('error')}")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

    # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∏–º –∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ä–∞–±–æ—á–∏–π –∫–∞–Ω–∞–ª –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    print(f"\nüîç –¢–µ—Å—Ç–∏—Ä—É—é –∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫–∞–Ω–∞–ª @durov –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è...")
    try:
        response = requests.post(
            "http://localhost:8000/api/channels/validate",
            json={"channel_input": "@durov"},
            headers={"Content-Type": "application/json"}
        )
        
        result = response.json()
        if result.get('success'):
            print(f"‚úÖ @durov –Ω–∞–π–¥–µ–Ω: {result['data']['title']}")
        else:
            print(f"‚ùå –î–∞–∂–µ @durov –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {result.get('error')}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å @durov: {e}")

if __name__ == "__main__":
    test_channel_validation() 