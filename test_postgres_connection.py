#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ Backend
"""

import os
from dotenv import load_dotenv
import psycopg2
from sqlalchemy import create_engine, text

def test_postgres_connection():
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    load_dotenv()
    
    DB_HOST = os.getenv("DB_HOST", "localhost")
    DB_PORT = os.getenv("DB_PORT", "5432")
    DB_NAME = os.getenv("DB_NAME", "digest_bot")
    DB_USER = os.getenv("DB_USER", "digest_bot") 
    DB_PASSWORD = os.getenv("DB_PASSWORD", "SecurePassword123!")
    
    print(f"üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL:")
    print(f"   Host: {DB_HOST}")
    print(f"   Port: {DB_PORT}")
    print(f"   Database: {DB_NAME}")
    print(f"   User: {DB_USER}")
    print(f"   Password: {'*' * len(DB_PASSWORD)}")
    print()
    
    # –¢–µ—Å—Ç 1: –ü—Ä—è–º–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ psycopg2
    try:
        print("1Ô∏è‚É£ –¢–µ—Å—Ç psycopg2...")
        conn = psycopg2.connect(
            host=DB_HOST,
            port=DB_PORT,
            database=DB_NAME,
            user=DB_USER,
            password=DB_PASSWORD
        )
        cursor = conn.cursor()
        cursor.execute("SELECT version();")
        version = cursor.fetchone()[0]
        print(f"   ‚úÖ psycopg2: {version[:50]}...")
        cursor.close()
        conn.close()
    except Exception as e:
        print(f"   ‚ùå psycopg2 –æ—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 2: SQLAlchemy –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ (–∫–∞–∫ –≤ Backend)
    try:
        print("\n2Ô∏è‚É£ –¢–µ—Å—Ç SQLAlchemy...")
        DATABASE_URL = f"postgresql://{DB_USER}:{DB_PASSWORD}@{DB_HOST}:{DB_PORT}/{DB_NAME}"
        print(f"   URL: {DATABASE_URL}")
        
        engine = create_engine(DATABASE_URL, echo=False)
        with engine.connect() as conn:
            result = conn.execute(text("SELECT 1"))
            print(f"   ‚úÖ SQLAlchemy: –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ")
    except Exception as e:
        print(f"   ‚ùå SQLAlchemy –æ—à–∏–±–∫–∞: {e}")
        print(f"   –¢–∏–ø –æ—à–∏–±–∫–∏: {type(e).__name__}")

if __name__ == "__main__":
    test_postgres_connection() 