#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ PostgreSQL –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö digest_bot
"""

import os
import psycopg2
from psycopg2.extensions import ISOLATION_LEVEL_AUTOCOMMIT
from dotenv import load_dotenv

def setup_postgres_database():
    load_dotenv()
    
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    DB_HOST = os.getenv("DB_HOST", "localhost")
    DB_PORT = os.getenv("DB_PORT", "5432")
    DB_NAME = os.getenv("DB_NAME", "digest_bot")
    DB_USER = os.getenv("DB_USER", "digest_bot")
    DB_PASSWORD = os.getenv("DB_PASSWORD", "SecurePassword123!")
    
    print(f"üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ PostgreSQL:")
    print(f"   –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {DB_NAME}")
    print(f"   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {DB_USER}")
    print(f"   –•–æ—Å—Ç: {DB_HOST}:{DB_PORT}")
    print()
    
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ postgres –±–∞–∑–µ (—Å–∏—Å—Ç–µ–º–Ω–∞—è)
        print("1Ô∏è‚É£ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–∏—Å—Ç–µ–º–Ω–æ–π –±–∞–∑–µ postgres...")
        conn = psycopg2.connect(
            host=DB_HOST,
            port=DB_PORT,
            database="postgres",  # –°–∏—Å—Ç–µ–º–Ω–∞—è –±–∞–∑–∞
            user="postgres",      # –°—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            password="postgres"   # –ü–æ–ø—Ä–æ–±—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–∞—Ä–æ–ª—å
        )
        conn.set_isolation_level(ISOLATION_LEVEL_AUTOCOMMIT)
        cursor = conn.cursor()
        print("   ‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω –∫ postgres")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º/—Å–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        print(f"\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {DB_USER}...")
        cursor.execute("SELECT 1 FROM pg_roles WHERE rolname=%s", (DB_USER,))
        if cursor.fetchone():
            print(f"   ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {DB_USER} —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        else:
            print(f"   üîß –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {DB_USER}...")
            cursor.execute(f"CREATE USER {DB_USER} WITH PASSWORD %s", (DB_PASSWORD,))
            print(f"   ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {DB_USER} —Å–æ–∑–¥–∞–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º/—Å–æ–∑–¥–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        print(f"\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö {DB_NAME}...")
        cursor.execute("SELECT 1 FROM pg_database WHERE datname=%s", (DB_NAME,))
        if cursor.fetchone():
            print(f"   ‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö {DB_NAME} —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        else:
            print(f"   üîß –°–æ–∑–¥–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö {DB_NAME}...")
            cursor.execute(f"CREATE DATABASE {DB_NAME} OWNER {DB_USER}")
            print(f"   ‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö {DB_NAME} —Å–æ–∑–¥–∞–Ω–∞")
        
        # –î–∞–µ–º –ø—Ä–∞–≤–∞
        print(f"\n4Ô∏è‚É£ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞ –¥–ª—è {DB_USER}...")
        cursor.execute(f"GRANT ALL PRIVILEGES ON DATABASE {DB_NAME} TO {DB_USER}")
        cursor.execute(f"ALTER USER {DB_USER} CREATEDB")
        print(f"   ‚úÖ –ü—Ä–∞–≤–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
        
        cursor.close()
        conn.close()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Ü–µ–ª–µ–≤–æ–π –±–∞–∑–µ
        print(f"\n5Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ {DB_NAME}...")
        test_conn = psycopg2.connect(
            host=DB_HOST,
            port=DB_PORT,
            database=DB_NAME,
            user=DB_USER,
            password=DB_PASSWORD
        )
        test_cursor = test_conn.cursor()
        test_cursor.execute("SELECT version()")
        version = test_cursor.fetchone()[0]
        print(f"   ‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ: {version[:50]}...")
        test_cursor.close()
        test_conn.close()
        
        print("\nüéâ PostgreSQL –Ω–∞—Å—Ç—Ä–æ–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        return True
        
    except psycopg2.Error as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ PostgreSQL: {e}")
        print(f"   –ö–æ–¥ –æ—à–∏–±–∫–∏: {e.pgcode}")
        return False
    except Exception as e:
        print(f"‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    setup_postgres_database() 