#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import requests
import json

def check_active_topics():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ —Å–∏—Å—Ç–µ–º–µ"""
    print("üîç –ü–†–û–í–ï–†–ö–ê –ê–ö–¢–ò–í–ù–´–• –ö–ê–¢–ï–ì–û–†–ò–ô –í –°–ò–°–¢–ï–ú–ï")
    print("=" * 50)
    
    # –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ endpoints
    endpoints_to_try = [
        'http://localhost:8000/api/topics',
        'http://localhost:8000/api/categories'
    ]
    
    for endpoint in endpoints_to_try:
        try:
            print(f"üîó –ü—Ä–æ–≤–µ—Ä—è–µ–º: {endpoint}")
            response = requests.get(endpoint)
            print(f"   Status: {response.status_code}")
            
            if response.status_code == 200:
                topics = response.json()
                active_topics = [topic for topic in topics if topic.get('is_active', False)]
                
                print(f"üìä –í—Å–µ–≥–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {len(topics)}")
                print(f"üéØ –ê–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {len(active_topics)}")
                print("\nüè∑Ô∏è –ê–ö–¢–ò–í–ù–´–ï –ö–ê–¢–ï–ì–û–†–ò–ò:")
                
                for topic in active_topics:
                    name = topic.get('name', 'Unknown')
                    description = topic.get('description', '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è')
                    print(f"   ‚Ä¢ {name}: {description}")
                
                return active_topics
            else:
                print(f"   ‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
                
        except Exception as e:
            print(f"   ‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
    
    print("‚ùå –ù–ò –û–î–ò–ù ENDPOINT –ù–ï –†–ê–ë–û–¢–ê–ï–¢!")
    return []

def check_channels_metadata():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∫–∞–Ω–∞–ª–æ–≤"""
    print("\nüîç –ü–†–û–í–ï–†–ö–ê –ú–ï–¢–ê–î–ê–ù–ù–´–• –ö–ê–ù–ê–õ–û–í")
    print("=" * 50)
    
    try:
        response = requests.get('http://localhost:8000/api/channels?active_only=true')
        if response.status_code == 200:
            channels = response.json()
            print(f"üì∫ –ê–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤: {len(channels)}")
            
            for channel in channels:
                name = channel.get('title', 'Unknown')
                username = channel.get('username', 'N/A')
                categories = channel.get('categories', [])
                
                print(f"   üì∫ {name} (@{username})")
                print(f"      üè∑Ô∏è –ö–∞—Ç–µ–≥–æ—Ä–∏–∏: {[cat.get('name') for cat in categories if cat.get('is_active')]}")
                
            return channels
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ API: {response.status_code}")
            return []
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return []

def simulate_ai_prompt():
    """–°–∏–º—É–ª–∏—Ä—É–µ–º —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ AI –ø—Ä–æ–º–ø—Ç–∞"""
    print("\nü§ñ –°–ò–ú–£–õ–Ø–¶–ò–Ø AI –ü–†–û–ú–ü–¢–ê")
    print("=" * 50)
    
    active_topics = check_active_topics()
    
    if not active_topics:
        print("‚ùå –ù–ï–¢ –ê–ö–¢–ò–í–ù–´–• –ö–ê–¢–ï–ì–û–†–ò–ô - –≠–¢–û –ü–†–û–ë–õ–ï–ú–ê!")
        return None
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–æ–º–ø—Ç –∫–∞–∫ –≤ workflow
    topics_description = []
    for topic in active_topics:
        name = topic.get('name', '')
        description = topic.get('description', name)
        topics_description.append(f"{name} ({description})")
    
    topics_str = ', '.join(topics_description)
    categories_list = [topic.get('name') for topic in active_topics]
    
    prompt = f"""–û—Ç—Ñ–∏–ª—å—Ç—Ä—É–π –ø–æ—Å—Ç—ã –ø–æ —Ç–µ–º–∞–º: {topics_str}.

–ü—Ä–∞–≤–∏–ª–æ: summary = "NULL" –µ—Å–ª–∏ —Ç–µ–∫—Å—Ç –ø–æ—Å—Ç–∞ –ù–ï –∏–º–µ–µ—Ç –æ—Ç–Ω–æ—à–µ–Ω–∏—è –ù–ò –ö –û–î–ù–û–ô –∏–∑ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã—Ö —Ç–µ–º.

–í–æ–∑–≤—Ä–∞—â–∞–π JSON: {{"results": [{{"id": "post_id", "summary": "—Ä–µ–∑—é–º–µ –∏–ª–∏ NULL", "importance": 8, "urgency": 6, "significance": 7, "category": "–¢–æ—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–º—ã"}}]}}

–í–ê–ñ–ù–û: category –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ–¥–Ω–∏–º –∏–∑: {', '.join(categories_list)} –∏–ª–∏ "NULL"

–ê–Ω–∞–ª–∏–∑–∏—Ä—É–π –ø–æ –°–ú–´–°–õ–£."""
    
    print("üìù –°–§–û–†–ú–ò–†–û–í–ê–ù–ù–´–ô –ü–†–û–ú–ü–¢:")
    print("-" * 30)
    print(prompt)
    print("-" * 30)
    
    return prompt

def main():
    print("üöÄ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê AI PROCESSING –ü–†–û–ë–õ–ï–ú")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    active_topics = check_active_topics()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–Ω–∞–ª—ã
    channels = check_channels_metadata()
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –ø—Ä–æ–º–ø—Ç
    prompt = simulate_ai_prompt() if active_topics else None
    
    print("\nüîß –ê–ù–ê–õ–ò–ó –ü–†–û–ë–õ–ï–ú:")
    print("=" * 50)
    
    if not active_topics:
        print("‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–ë–õ–ï–ú–ê: –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π!")
        print("   üí° –†–µ—à–µ–Ω–∏–µ: –ò—Å–ø—Ä–∞–≤–∏—Ç—å API endpoint –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π")
        print("   üí° –õ–∏–±–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ –∫–∞–Ω–∞–ª–æ–≤")
    
    if not channels:
        print("‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–ë–õ–ï–ú–ê: –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤!")
        print("   üí° –†–µ—à–µ–Ω–∏–µ: –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∫–∞–Ω–∞–ª—ã –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏")
    
    if not prompt and active_topics:
        print("‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–ë–õ–ï–ú–ê: –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å AI –ø—Ä–æ–º–ø—Ç!")
    
    # –°–û–ó–î–ê–ï–ú WORKAROUND - –∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ –∫–∞–Ω–∞–ª–æ–≤
    if not active_topics and channels:
        print("\nüîß WORKAROUND: –°–æ–±–∏—Ä–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ –∫–∞–Ω–∞–ª–æ–≤")
        print("=" * 50)
        
        all_categories = set()
        for channel in channels:
            categories = channel.get('categories', [])
            for cat in categories:
                if cat.get('is_active'):
                    all_categories.add(cat.get('name'))
        
        print(f"üè∑Ô∏è –ù–∞–π–¥–µ–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ –∫–∞–Ω–∞–ª–æ–≤: {list(all_categories)}")
        
        if all_categories:
            topics_str = ', '.join(all_categories)
            
            workaround_prompt = f"""–û—Ç—Ñ–∏–ª—å—Ç—Ä—É–π –ø–æ—Å—Ç—ã –ø–æ —Ç–µ–º–∞–º: {topics_str}.

–ü—Ä–∞–≤–∏–ª–æ: summary = "NULL" –µ—Å–ª–∏ —Ç–µ–∫—Å—Ç –ø–æ—Å—Ç–∞ –ù–ï –∏–º–µ–µ—Ç –æ—Ç–Ω–æ—à–µ–Ω–∏—è –ù–ò –ö –û–î–ù–û–ô –∏–∑ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã—Ö —Ç–µ–º.

–í–æ–∑–≤—Ä–∞—â–∞–π JSON: {{"results": [{{"id": "post_id", "summary": "—Ä–µ–∑—é–º–µ –∏–ª–∏ NULL", "importance": 8, "urgency": 6, "significance": 7, "category": "–¢–æ—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–º—ã"}}]}}

–í–ê–ñ–ù–û: category –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ–¥–Ω–∏–º –∏–∑: {topics_str} –∏–ª–∏ "NULL"

–ê–Ω–∞–ª–∏–∑–∏—Ä—É–π –ø–æ –°–ú–´–°–õ–£."""
            
            print("\nüìù WORKAROUND –ü–†–û–ú–ü–¢:")
            print("-" * 30)
            print(workaround_prompt)
            print("-" * 30)
    
    print("\n‚úÖ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê")

if __name__ == "__main__":
    main() 