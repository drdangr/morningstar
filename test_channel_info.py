import asyncio
from telethon import TelegramClient
import os
from dotenv import load_dotenv

load_dotenv()

# Telegram API –¥–∞–Ω–Ω—ã–µ
API_ID = os.getenv('TELEGRAM_API_ID')
API_HASH = os.getenv('TELEGRAM_API_HASH')
PHONE = os.getenv('TELEGRAM_PHONE')

async def check_channel_info():
    client = TelegramClient('session/userbot', API_ID, API_HASH)
    await client.start()
    
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–∞–Ω–∞–ª–æ–≤ –ù–µ–≤–∑–æ—Ä–æ–≤–∞:")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–Ω–∞–ª—ã –ø–æ username
    channels_to_check = [
        "@nevzorovpodcast",  # –ß—Ç–æ —É –Ω–∞—Å –≤ –±–∞–∑–µ
        "@nevzorovtv",       # –í–æ–∑–º–æ–∂–Ω—ã–π –æ—Å–Ω–æ–≤–Ω–æ–π –∫–∞–Ω–∞–ª  
        "@nevzorov",         # –ü—Ä–æ—Å—Ç–æ–π –≤–∞—Ä–∏–∞–Ω—Ç
        "@nevzorovofficial", # –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π
    ]
    
    for username in channels_to_check:
        try:
            entity = await client.get_entity(username)
            print(f"\n‚úÖ {username}:")
            print(f"   ID: {entity.id}")
            print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {entity.title}")
            print(f"   –ü–æ–¥–ø–∏—Å—á–∏–∫–∏: {getattr(entity, 'participants_count', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            messages = await client.get_messages(entity, limit=5)
            recent_count = 0
            for msg in messages:
                if msg.date and (msg.date.day == 9):  # –°–µ–≥–æ–¥–Ω—è 9 –∏—é–Ω—è
                    recent_count += 1
            print(f"   –ü–æ—Å—Ç–æ–≤ —Å–µ–≥–æ–¥–Ω—è: {recent_count}")
            
        except Exception as e:
            print(f"\n‚ùå {username}: {str(e)}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –∫–∞–Ω–∞–ª –∏–∑ –Ω–∞—à–µ–π –±–∞–∑—ã
    print(f"\nüéØ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–Ω–∞–ª –∏–∑ –Ω–∞—à–µ–π –±–∞–∑—ã (ID: 1001231519967):")
    try:
        entity = await client.get_entity(1001231519967)
        print(f"   –†–µ–∞–ª—å–Ω—ã–π username: @{entity.username}")
        print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {entity.title}")
        print(f"   –ü–æ–¥–ø–∏—Å—á–∏–∫–∏: {getattr(entity, 'participants_count', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
        
        # –°–æ–æ–±—â–µ–Ω–∏—è –∑–∞ —Å–µ–≥–æ–¥–Ω—è
        messages = await client.get_messages(entity, limit=10)
        today_messages = []
        for msg in messages:
            if msg.date and msg.date.day == 9:  # –°–µ–≥–æ–¥–Ω—è
                today_messages.append(msg)
        
        print(f"   –°–æ–æ–±—â–µ–Ω–∏–π —Å–µ–≥–æ–¥–Ω—è: {len(today_messages)}")
        for i, msg in enumerate(today_messages):
            text = (msg.text or "–ú–µ–¥–∏–∞-–ø–æ—Å—Ç")[:50]
            print(f"   {i+1}. {text}...")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    await client.disconnect()

if __name__ == "__main__":
    asyncio.run(check_channel_info()) 