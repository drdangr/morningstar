import React, { useState, useEffect } from 'react';
import {
  Box,
  Typography,
  Card,
  CardContent,
  Grid,
  TextField,
  Button,
  Alert
} from '@mui/material';
import {
  Schedule as ScheduleIcon,
  Save as SaveIcon
} from '@mui/icons-material';

const DAYS_OF_WEEK = {
  monday: '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫',
  tuesday: '–í—Ç–æ—Ä–Ω–∏–∫', 
  wednesday: '–°—Ä–µ–¥–∞',
  thursday: '–ß–µ—Ç–≤–µ—Ä–≥',
  friday: '–ü—è—Ç–Ω–∏—Ü–∞',
  saturday: '–°—É–±–±–æ—Ç–∞',
  sunday: '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ'
};

const BotDeliverySettings = ({ bot, onBotUpdate }) => {
  const [deliverySchedule, setDeliverySchedule] = useState({});
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState('');

  console.log('üîç BotDeliverySettings —Ä–µ–Ω–¥–µ—Ä–∏—Ç—Å—è —Å bot:', bot);

  // –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  useEffect(() => {
    if (bot) {
      loadBotDeliverySettings();
    }
  }, [bot?.id]);

  const loadBotDeliverySettings = async () => {
    if (!bot?.id) return;

    setLoading(true);
    setError('');

    try {
      const response = await fetch(`http://localhost:8000/api/public-bots/${bot.id}`);
      if (response.ok) {
        const botData = await response.json();
        console.log('üìä –î–∞–Ω–Ω—ã–µ –±–æ—Ç–∞ –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', botData);
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–æ—Å—Ç–∞–≤–∫–∏
        const schedule = botData.delivery_schedule || getDefaultSchedule();
        setDeliverySchedule(schedule);
      } else {
        throw new Error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –±–æ—Ç–∞');
      }
    } catch (err) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:', err);
      setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–æ—Å—Ç–∞–≤–∫–∏: ' + err.message);
    } finally {
      setLoading(false);
    }
  };

  const getDefaultSchedule = () => {
    return {
      monday: ['08:00', '19:00'],
      tuesday: ['08:00', '19:00'],
      wednesday: ['08:00', '19:00'],
      thursday: ['08:00', '19:00'],
      friday: ['08:00', '19:00'],
      saturday: ['10:00'],
      sunday: ['10:00']
    };
  };

  if (loading) {
    return (
      <Box sx={{ p: 3, textAlign: 'center' }}>
        <Typography>–ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–æ—Å—Ç–∞–≤–∫–∏...</Typography>
      </Box>
    );
  }

  return (
    <Box sx={{ p: 3 }}>
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <Typography variant="h5" gutterBottom sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>
        <ScheduleIcon />
        –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ—Å—Ç–∞–≤–∫–∏ –¥–∞–π–¥–∂–µ—Å—Ç–æ–≤ (–£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
      </Typography>
      
      <Typography variant="body2" color="textSecondary" gutterBottom>
        –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–æ—Å—Ç–∞–≤–∫–∏ –¥–∞–π–¥–∂–µ—Å—Ç–æ–≤ –¥–ª—è –±–æ—Ç–∞ "{bot?.name}"
      </Typography>

      {/* –û—à–∏–±–∫–∏ */}
      {error && (
        <Alert severity="error" sx={{ mb: 2 }}>
          {error}
        </Alert>
      )}

      <Grid container spacing={3}>
        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏ */}
        <Grid item xs={12}>
          <Card>
            <CardContent>
              <Typography variant="h6" gutterBottom>
                –¢–µ–∫—É—â–µ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–æ—Å—Ç–∞–≤–∫–∏
              </Typography>
              
              <Typography variant="body2" sx={{ mb: 2 }}>
                –í—Å–µ–≥–æ –¥–æ—Å—Ç–∞–≤–æ–∫ –≤ –Ω–µ–¥–µ–ª—é: <strong>{Object.values(deliverySchedule).reduce((total, times) => total + times.length, 0)}</strong>
              </Typography>
              
              {Object.entries(DAYS_OF_WEEK).map(([dayKey, dayName]) => (
                <Box key={dayKey} sx={{ mb: 1 }}>
                  <Typography variant="subtitle2">
                    {dayName}: {(deliverySchedule[dayKey] || []).join(', ') || '–ù–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ'}
                  </Typography>
                </Box>
              ))}
              
              <Button
                variant="contained"
                startIcon={<SaveIcon />}
                sx={{ mt: 2 }}
                disabled
              >
                –°–æ—Ö—Ä–∞–Ω–∏—Ç—å (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)
              </Button>
            </CardContent>
          </Card>
        </Grid>
      </Grid>
    </Box>
  );
};

export default BotDeliverySettings; 