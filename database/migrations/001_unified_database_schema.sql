-- =====================================================
-- UNIFIED DATABASE SCHEMA –¥–ª—è MorningStarBot3
-- =====================================================
-- –û–±—ä–µ–¥–∏–Ω—è–µ—Ç –≤—Å–µ –º–∏–≥—Ä–∞—Ü–∏–∏ 001-015 –≤ –µ–¥–∏–Ω—É—é —á–∏—Å—Ç—É—é —Å—Ö–µ–º—É
-- –°–æ–∑–¥–∞–Ω–æ: 27 –∏—é–ª—è 2025
-- –ò—Å—Ç–æ—á–Ω–∏–∫: –∞–Ω–∞–ª–∏–∑ –≤—Å–µ—Ö –º–∏–≥—Ä–∞—Ü–∏–π –∏ schemas.py

-- –í–∫–ª—é—á–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

BEGIN;

-- =====================================================
-- 1. –°–ò–°–¢–ï–ú–ê –û–¢–°–õ–ï–ñ–ò–í–ê–ù–ò–Ø –ú–ò–ì–†–ê–¶–ò–ô
-- =====================================================

CREATE TABLE IF NOT EXISTS schema_migrations (
    migration_name VARCHAR(255) PRIMARY KEY,
    executed_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    checksum VARCHAR(64),
    description TEXT
);

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π
CREATE OR REPLACE FUNCTION log_migration(p_migration_name VARCHAR(255), p_description TEXT DEFAULT NULL)
RETURNS VOID AS $$
BEGIN
    INSERT INTO schema_migrations (migration_name, checksum, description)
    VALUES (p_migration_name, 'unified_schema_v1', p_description)
    ON CONFLICT (migration_name) DO NOTHING;
    
    RAISE NOTICE 'Migration executed: % - %', p_migration_name, COALESCE(p_description, 'Unified schema');
END;
$$ LANGUAGE plpgsql;

-- =====================================================
-- 2. –û–°–ù–û–í–ù–´–ï –°–ü–†–ê–í–û–ß–ù–ò–ö–ò
-- =====================================================

-- –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
CREATE TABLE IF NOT EXISTS categories (
    id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL UNIQUE,
    description TEXT,
    emoji VARCHAR(10) DEFAULT 'üìù',
    is_active BOOLEAN DEFAULT true,
    ai_prompt TEXT,
    sort_order INTEGER DEFAULT 0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(is_active);
CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);
CREATE INDEX IF NOT EXISTS idx_categories_sort_order ON categories(sort_order);

-- Telegram –∫–∞–Ω–∞–ª—ã
CREATE TABLE IF NOT EXISTS channels (
    id SERIAL PRIMARY KEY,
    channel_name VARCHAR(100) NOT NULL,
    username VARCHAR(100),  -- –±–µ–∑ @
    telegram_id BIGINT UNIQUE,  -- BIGINT –¥–ª—è –±–æ–ª—å—à–∏—Ö ID
    title VARCHAR(255),  -- –º–æ–∂–µ—Ç –±—ã—Ç—å NULL –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–∞–Ω–∞–ª–æ–≤
    url VARCHAR(255),
    description TEXT,
    last_parsed TIMESTAMP,
    error_count INTEGER DEFAULT 0,
    is_active BOOLEAN DEFAULT true,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE UNIQUE INDEX IF NOT EXISTS idx_channels_telegram_id ON channels(telegram_id) WHERE telegram_id IS NOT NULL;
CREATE INDEX IF NOT EXISTS idx_channels_active ON channels(is_active);
CREATE INDEX IF NOT EXISTS idx_channels_username ON channels(username);
CREATE INDEX IF NOT EXISTS idx_channels_last_parsed ON channels(last_parsed);
CREATE INDEX IF NOT EXISTS idx_channels_error_count ON channels(error_count);

-- –°–≤—è–∑–∏ –∫–∞–Ω–∞–ª–æ–≤ –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π (–º–Ω–æ–≥–∏–µ –∫–æ –º–Ω–æ–≥–∏–º)
CREATE TABLE IF NOT EXISTS channel_categories (
    channel_id INTEGER REFERENCES channels(id) ON DELETE CASCADE,
    category_id INTEGER REFERENCES categories(id) ON DELETE CASCADE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (channel_id, category_id)
);

-- =====================================================
-- 3. –ü–£–ë–õ–ò–ß–ù–´–ï –ë–û–¢–´ –ò –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø
-- =====================================================

-- –ü—É–±–ª–∏—á–Ω—ã–µ –±–æ—Ç—ã (–º—É–ª—å—Ç–∏—Ç–µ–Ω–∞–Ω—Ç–Ω–æ—Å—Ç—å)
CREATE TABLE IF NOT EXISTS public_bots (
    id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    bot_token VARCHAR(100) NOT NULL UNIQUE,
    bot_username VARCHAR(100),  -- –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–∑ Telegram API
    welcome_message TEXT DEFAULT '–ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ MorningStarBot3!',
    status VARCHAR(20) DEFAULT 'active',  -- enum: active, inactive, maintenance
    
    -- Legacy compatibility fields (–¥–æ STAGE 4)
    default_language VARCHAR(10) DEFAULT 'ru',
    max_posts_per_digest INTEGER DEFAULT 50,
    max_summary_length INTEGER DEFAULT 500,
    timezone VARCHAR(50) DEFAULT 'Europe/Moscow',
    digest_generation_time VARCHAR(5) DEFAULT '09:00',
    digest_schedule JSONB DEFAULT '{"enabled": false}'::jsonb,
    users_count INTEGER DEFAULT 0,
    digests_count INTEGER DEFAULT 0,
    channels_count INTEGER DEFAULT 0,
    topics_count INTEGER DEFAULT 0,
    
    -- New unified fields
    delivery_schedule JSONB DEFAULT '{"enabled": false}'::jsonb,
    categorization_prompt TEXT,
    summarization_prompt TEXT,
    ai_settings JSONB DEFAULT '{}'::jsonb,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    
    CONSTRAINT chk_bot_status CHECK (status IN ('setup', 'active', 'paused', 'development'))
);

CREATE INDEX IF NOT EXISTS idx_public_bots_status ON public_bots(status);
CREATE INDEX IF NOT EXISTS idx_public_bots_username ON public_bots(bot_username);

-- –°–≤—è–∑–∏ –±–æ—Ç–æ–≤ –∏ –∫–∞–Ω–∞–ª–æ–≤ (–º–Ω–æ–≥–∏–µ –∫–æ –º–Ω–æ–≥–∏–º)
CREATE TABLE IF NOT EXISTS bot_channels (
    id SERIAL PRIMARY KEY,
    public_bot_id INTEGER REFERENCES public_bots(id) ON DELETE CASCADE,
    channel_id INTEGER REFERENCES channels(id) ON DELETE CASCADE,
    weight FLOAT DEFAULT 1.0,  -- –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –∫–∞–Ω–∞–ª–∞ –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –±–æ—Ç–∞ (0.1-2.0)
    is_active BOOLEAN DEFAULT true,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT uq_bot_channel UNIQUE (public_bot_id, channel_id)
);

CREATE INDEX IF NOT EXISTS idx_bot_channels_bot_id ON bot_channels(public_bot_id);
CREATE INDEX IF NOT EXISTS idx_bot_channels_channel_id ON bot_channels(channel_id);
CREATE INDEX IF NOT EXISTS idx_bot_channels_is_active ON bot_channels(is_active);

-- –°–≤—è–∑–∏ –±–æ—Ç–æ–≤ –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π (–º–Ω–æ–≥–∏–µ –∫–æ –º–Ω–æ–≥–∏–º)
CREATE TABLE IF NOT EXISTS bot_categories (
    id SERIAL PRIMARY KEY,
    public_bot_id INTEGER REFERENCES public_bots(id) ON DELETE CASCADE,
    category_id INTEGER REFERENCES categories(id) ON DELETE CASCADE,
    custom_ai_instructions TEXT,  -- –°–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ AI –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ —ç—Ç–æ–º –±–æ—Ç–µ
    weight FLOAT DEFAULT 1.0,  -- –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –±–æ—Ç–∞
    is_active BOOLEAN DEFAULT true,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT uq_bot_category UNIQUE (public_bot_id, category_id)
);

CREATE INDEX IF NOT EXISTS idx_bot_categories_bot_id ON bot_categories(public_bot_id);
CREATE INDEX IF NOT EXISTS idx_bot_categories_category_id ON bot_categories(category_id);
CREATE INDEX IF NOT EXISTS idx_bot_categories_is_active ON bot_categories(is_active);

-- =====================================================
-- 4. –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ò –ò –ü–û–î–ü–ò–°–ö–ò
-- =====================================================

-- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–∏—Å—Ç–µ–º—ã
CREATE TABLE IF NOT EXISTS users (
    id SERIAL PRIMARY KEY,
    telegram_id BIGINT UNIQUE NOT NULL,  -- BIGINT –¥–ª—è –±–æ–ª—å—à–∏—Ö ID
    username VARCHAR(100),
    first_name VARCHAR(100),
    last_name VARCHAR(100),
    language_code VARCHAR(10) DEFAULT 'ru',
    is_active BOOLEAN DEFAULT true,
    preferences JSONB DEFAULT '{}'::jsonb,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE UNIQUE INDEX IF NOT EXISTS idx_users_telegram_id ON users(telegram_id);
CREATE INDEX IF NOT EXISTS idx_users_active ON users(is_active);
CREATE INDEX IF NOT EXISTS idx_users_username ON users(username);

-- –ü–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–º—É–ª—å—Ç–∏—Ç–µ–Ω–∞–Ω—Ç–Ω—ã–µ)
CREATE TABLE IF NOT EXISTS user_category_subscriptions (
    user_telegram_id BIGINT NOT NULL,
    category_id INTEGER REFERENCES categories(id) ON DELETE CASCADE,
    public_bot_id INTEGER REFERENCES public_bots(id) ON DELETE CASCADE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (user_telegram_id, category_id, public_bot_id)
);

CREATE INDEX IF NOT EXISTS idx_user_cat_subs_user ON user_category_subscriptions(user_telegram_id);
CREATE INDEX IF NOT EXISTS idx_user_cat_subs_bot ON user_category_subscriptions(public_bot_id);

-- –ü–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞ –∫–∞–Ω–∞–ª—ã (–º—É–ª—å—Ç–∏—Ç–µ–Ω–∞–Ω—Ç–Ω—ã–µ)
CREATE TABLE IF NOT EXISTS user_channel_subscriptions (
    user_telegram_id BIGINT NOT NULL,
    channel_id INTEGER REFERENCES channels(id) ON DELETE CASCADE,
    public_bot_id INTEGER REFERENCES public_bots(id) ON DELETE CASCADE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (user_telegram_id, channel_id, public_bot_id)
);

CREATE INDEX IF NOT EXISTS idx_user_ch_subs_user ON user_channel_subscriptions(user_telegram_id);
CREATE INDEX IF NOT EXISTS idx_user_ch_subs_bot ON user_channel_subscriptions(public_bot_id);

-- Legacy –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–ø—Ä–æ—Å—Ç–∞—è —Å–≤—è–∑—å - –¥–ª—è Backend —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
CREATE TABLE IF NOT EXISTS user_subscriptions (
    user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
    category_id INTEGER REFERENCES categories(id) ON DELETE CASCADE,
    PRIMARY KEY (user_id, category_id)
);

-- =====================================================
-- 5. –ö–≠–®–ò–†–û–í–ê–ù–ò–ï –ü–û–°–¢–û–í (–æ—Å–Ω–æ–≤–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ)
-- =====================================================

-- –ö—ç—à –ø–æ—Å—Ç–æ–≤ –æ—Ç userbot (–µ–¥–∏–Ω—ã–π –ø—É–ª –≤—Å–µ—Ö –ø–æ—Å—Ç–æ–≤)
CREATE TABLE IF NOT EXISTS posts_cache (
    id SERIAL PRIMARY KEY,
    channel_telegram_id BIGINT NOT NULL,  -- BIGINT –¥–ª—è –±–æ–ª—å—à–∏—Ö ID
    telegram_message_id BIGINT NOT NULL,  -- BIGINT –¥–ª—è –±–æ–ª—å—à–∏—Ö ID
    title TEXT,
    content TEXT,
    media_urls JSONB DEFAULT '[]'::jsonb,  -- List[str] –≤ JSONB
    views INTEGER DEFAULT 0,
    post_date TIMESTAMP NOT NULL,  -- –∏—Å–ø–æ–ª—å–∑—É–µ–º post_date, –ù–ï published_at
    collected_at TIMESTAMP NOT NULL DEFAULT NOW(),
    userbot_metadata JSONB DEFAULT '{}'::jsonb,
    retention_until TIMESTAMP,  -- –í—Ä–µ–º—è –¥–æ –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö—Ä–∞–Ω–∏—Ç—å –ø–æ—Å—Ç
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW(),
    
    CONSTRAINT uq_posts_cache_channel_message UNIQUE (channel_telegram_id, telegram_message_id)
);

-- –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã–µ –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
CREATE INDEX IF NOT EXISTS idx_posts_cache_channel_date ON posts_cache(channel_telegram_id, post_date DESC);
CREATE INDEX IF NOT EXISTS idx_posts_cache_date ON posts_cache(post_date DESC);
CREATE INDEX IF NOT EXISTS idx_posts_cache_collected ON posts_cache(collected_at DESC);
CREATE INDEX IF NOT EXISTS idx_posts_cache_content_search ON posts_cache USING gin(to_tsvector('russian', COALESCE(title, '') || ' ' || COALESCE(content, '')));
CREATE INDEX IF NOT EXISTS idx_posts_cache_retention ON posts_cache(retention_until) WHERE retention_until IS NOT NULL;

-- –ù–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∏–Ω–¥–µ–∫—Å—ã –∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏:
CREATE INDEX IF NOT EXISTS idx_posts_cache_telegram_id ON posts_cache(channel_telegram_id, telegram_message_id);
CREATE INDEX IF NOT EXISTS idx_posts_cache_metadata_gin ON posts_cache USING gin(userbot_metadata);
CREATE INDEX IF NOT EXISTS idx_posts_cache_media_gin ON posts_cache USING gin(media_urls);

-- =====================================================
-- 6. AI –û–ë–†–ê–ë–û–¢–ö–ê –ü–û–°–¢–û–í (–º—É–ª—å—Ç–∏—Ç–µ–Ω–∞–Ω—Ç–Ω–∞—è)
-- =====================================================

-- –û—Å–Ω–æ–≤–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã AI –æ–±—Ä–∞–±–æ—Ç–∫–∏ (–ø–æ –±–æ—Ç–∞–º)
CREATE TABLE IF NOT EXISTS processed_data (
    id SERIAL PRIMARY KEY,
    post_id BIGINT NOT NULL REFERENCES posts_cache(id) ON DELETE CASCADE,
    public_bot_id INTEGER NOT NULL REFERENCES public_bots(id) ON DELETE CASCADE,
    
    -- AI —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ JSONB
    summaries JSONB DEFAULT '{}'::jsonb,
    categories JSONB DEFAULT '{}'::jsonb,
    metrics JSONB DEFAULT '{}'::jsonb,
    
    -- –°—Ç–∞—Ç—É—Å—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏
    processing_status VARCHAR(32) DEFAULT 'pending',
    is_categorized BOOLEAN DEFAULT FALSE,
    is_summarized BOOLEAN DEFAULT FALSE,
    
    -- –ú–µ—Ç–∞–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    processed_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    processing_version VARCHAR(50) DEFAULT 'v2.0',
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW(),
    
    -- –£–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å: –æ–¥–∏–Ω –ø–æ—Å—Ç - –æ–¥–∏–Ω –±–æ—Ç - –æ–¥–Ω–∞ –∑–∞–ø–∏—Å—å
    CONSTRAINT uq_processed_post_bot UNIQUE (post_id, public_bot_id),
    CONSTRAINT chk_processing_status CHECK (processing_status IN ('not_found', 'pending', 'processing', 'completed', 'failed'))
);

-- –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è AI –æ–±—Ä–∞–±–æ—Ç–∫–∏
CREATE INDEX IF NOT EXISTS idx_processed_data_post_id ON processed_data(post_id);
CREATE INDEX IF NOT EXISTS idx_processed_data_bot_id ON processed_data(public_bot_id);
CREATE INDEX IF NOT EXISTS idx_processed_data_status ON processed_data(processing_status);
CREATE INDEX IF NOT EXISTS idx_processed_data_flags ON processed_data(public_bot_id, is_categorized, is_summarized);
CREATE INDEX IF NOT EXISTS idx_processed_data_processed_at ON processed_data(processed_at DESC);

-- –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∏–Ω–¥–µ–∫—Å—ã –∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏:
CREATE INDEX IF NOT EXISTS idx_processed_data_post_bot ON processed_data(post_id, public_bot_id);
CREATE INDEX IF NOT EXISTS idx_processed_data_bot_status ON processed_data(public_bot_id, processing_status);
CREATE INDEX IF NOT EXISTS idx_processed_data_is_categorized ON processed_data(is_categorized);
CREATE INDEX IF NOT EXISTS idx_processed_data_is_summarized ON processed_data(is_summarized);
CREATE INDEX IF NOT EXISTS idx_processed_data_version ON processed_data(processing_version);

-- –î–µ—Ç–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã AI —Å–µ—Ä–≤–∏—Å–æ–≤ (–Ω–æ–≤–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞)
CREATE TABLE IF NOT EXISTS processed_service_results (
    id SERIAL PRIMARY KEY,
    post_id BIGINT NOT NULL,
    public_bot_id INTEGER NOT NULL,
    service_name VARCHAR(64) NOT NULL,  -- 'categorization', 'summarization', 'analysis'
    status VARCHAR(32) DEFAULT 'success',  -- 'success', 'failed', 'partial'
    payload JSONB NOT NULL DEFAULT '{}',   -- —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å–µ—Ä–≤–∏—Å–∞
    metrics JSONB NOT NULL DEFAULT '{}',   -- –º–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    processed_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    created_at TIMESTAMP DEFAULT NOW(),
    
    CONSTRAINT uq_service_result UNIQUE (post_id, public_bot_id, service_name)
);

CREATE INDEX IF NOT EXISTS idx_psr_post_bot_service ON processed_service_results (post_id, public_bot_id, service_name);
CREATE INDEX IF NOT EXISTS idx_psr_service_status ON processed_service_results (service_name, status);
CREATE INDEX IF NOT EXISTS idx_psr_processed_at ON processed_service_results (processed_at DESC);

-- =====================================================
-- 7. –°–ò–°–¢–ï–ú–ù–´–ï –ù–ê–°–¢–†–û–ô–ö–ò
-- =====================================================

-- –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã
CREATE TABLE IF NOT EXISTS config_settings (
    id SERIAL PRIMARY KEY,
    key VARCHAR(100) NOT NULL UNIQUE,
    value TEXT,
    description TEXT,
    category VARCHAR(50) DEFAULT 'general',
    value_type VARCHAR(20) DEFAULT 'string',  -- string, integer, float, boolean, json
    is_editable BOOLEAN DEFAULT true,
    is_active BOOLEAN DEFAULT true,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE INDEX IF NOT EXISTS idx_config_settings_category ON config_settings(category);
CREATE INDEX IF NOT EXISTS idx_config_settings_active ON config_settings(is_active);
CREATE INDEX IF NOT EXISTS idx_config_settings_editable ON config_settings(is_editable);

-- LLM –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã
CREATE TABLE IF NOT EXISTS llm_providers (
    id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL UNIQUE,
    api_base_url VARCHAR(255),
    provider_type VARCHAR(50) NOT NULL,  -- 'openai', 'anthropic', 'local'
    is_active BOOLEAN DEFAULT true,
    config JSONB DEFAULT '{}'::jsonb,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- LLM –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
CREATE TABLE IF NOT EXISTS llm_settings (
    id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL UNIQUE,
    llm_provider_id INTEGER REFERENCES llm_providers(id),
    model_name VARCHAR(100) NOT NULL,
    max_tokens INTEGER DEFAULT 1000,
    temperature DECIMAL(3,2) DEFAULT 0.70,
    top_p DECIMAL(3,2) DEFAULT 1.00,
    system_prompt TEXT,
    is_active BOOLEAN DEFAULT true,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- AI –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (—à–∞–±–ª–æ–Ω—ã)
CREATE TABLE IF NOT EXISTS ai_settings (
    id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    service_type VARCHAR(50) NOT NULL,  -- 'categorization', 'summarization', 'analysis'
    llm_setting_id INTEGER REFERENCES llm_settings(id),
    prompt_template TEXT NOT NULL,
    is_active BOOLEAN DEFAULT true,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- =====================================================
-- 8. –î–ê–ô–î–ñ–ï–°–¢–´ (N8N –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø)
-- =====================================================

-- –¢–∞–±–ª–∏—Ü–∞ –¥–∞–π–¥–∂–µ—Å—Ç–æ–≤ –æ—Ç N8N workflow
CREATE TABLE IF NOT EXISTS digests (
    id SERIAL PRIMARY KEY,
    digest_id VARCHAR(255) UNIQUE NOT NULL,  -- timestamp –æ—Ç N8N
    total_posts INTEGER DEFAULT 0,
    channels_processed INTEGER DEFAULT 0,
    original_posts INTEGER DEFAULT 0,
    relevant_posts INTEGER DEFAULT 0,
    avg_importance FLOAT DEFAULT 0.0,
    avg_urgency FLOAT DEFAULT 0.0,
    avg_significance FLOAT DEFAULT 0.0,
    binary_relevance_applied BOOLEAN DEFAULT FALSE,
    with_metrics BOOLEAN DEFAULT FALSE,
    digest_data TEXT,  -- JSON –¥–∞–Ω–Ω—ã–µ –ø–æ–ª–Ω–æ–≥–æ –¥–∞–π–¥–∂–µ—Å—Ç–∞
    processed_at TIMESTAMP,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE INDEX IF NOT EXISTS idx_digests_digest_id ON digests(digest_id);
CREATE INDEX IF NOT EXISTS idx_digests_processed_at ON digests(processed_at DESC);
CREATE INDEX IF NOT EXISTS idx_digests_created_at ON digests(created_at DESC);

-- =====================================================
-- 9. –ó–ê–ü–û–õ–ù–ï–ù–ò–ï –ë–ê–ó–û–í–´–• –î–ê–ù–ù–´–•
-- =====================================================

-- –ë–∞–∑–æ–≤—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
INSERT INTO categories (name, description) VALUES
('–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏', '–ù–æ–≤–æ—Å—Ç–∏ –æ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è—Ö –∏ IT'),
('–ü–æ–ª–∏—Ç–∏–∫–∞', '–ü–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –∏ —Å–æ–±—ã—Ç–∏—è'),
('–≠–∫–æ–Ω–æ–º–∏–∫–∞', '–≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞'),
('–û–±—â–∏–µ', '–û–±—â–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –∏ —Å–æ–±—ã—Ç–∏—è'),
('–í–æ–π–Ω–∞', '–í–æ–µ–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã'),
('–£–∫—Ä–∞–∏–Ω–∞', '–ù–æ–≤–æ—Å—Ç–∏ –æ –£–∫—Ä–∞–∏–Ω–µ'),
('–°–®–ê', '–ù–æ–≤–æ—Å—Ç–∏ –∏–∑ –°–®–ê'),
('–ö—É–ª—å—Ç—É—Ä–∞', '–ö—É–ª—å—Ç—É—Ä–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è –∏ –Ω–æ–≤–æ—Å—Ç–∏'),
('–°–ø–æ—Ä—Ç', '–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏')
ON CONFLICT (name) DO NOTHING;

-- –ë–∞–∑–æ–≤—ã–µ —Å–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
INSERT INTO config_settings (key, value, description, category, value_type) VALUES
-- AI Models
('ai_categorization_model', 'gpt-4o-mini', 'AI –º–æ–¥–µ–ª—å –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏–∏', 'ai', 'string'),
('ai_summarization_model', 'gpt-4o', 'AI –º–æ–¥–µ–ª—å –¥–ª—è —Å–∞–º–º–∞—Ä–∏–∑–∞—Ü–∏–∏', 'ai', 'string'),
('ai_analysis_model', 'gpt-4o-mini', 'AI –º–æ–¥–µ–ª—å –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞', 'ai', 'string'),

-- Max Tokens
('ai_categorization_max_tokens', '1000', '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏–∏', 'ai', 'integer'),
('ai_summarization_max_tokens', '2000', '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã –¥–ª—è —Å–∞–º–º–∞—Ä–∏–∑–∞—Ü–∏–∏', 'ai', 'integer'),
('ai_analysis_max_tokens', '1500', '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞', 'ai', 'integer'),

-- Temperature
('ai_categorization_temperature', '0.3', '–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏–∏', 'ai', 'float'),
('ai_summarization_temperature', '0.7', '–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –¥–ª—è —Å–∞–º–º–∞—Ä–∏–∑–∞—Ü–∏–∏', 'ai', 'float'),
('ai_analysis_temperature', '0.5', '–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞', 'ai', 'float'),

-- System
('collection_depth_days', '3', '–ì–ª—É–±–∏–Ω–∞ —Å–±–æ—Ä–∞ –ø–æ—Å—Ç–æ–≤ –≤ –¥–Ω—è—Ö', 'system', 'integer'),
('max_posts_per_digest', '50', '–ú–∞–∫—Å–∏–º—É–º –ø–æ—Å—Ç–æ–≤ –≤ –¥–∞–π–¥–∂–µ—Å—Ç–µ', 'system', 'integer'),
('digest_delivery_time', '09:00', '–í—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏ –¥–∞–π–¥–∂–µ—Å—Ç–æ–≤', 'system', 'string'),

-- DEFAULT_ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —à–∞–±–ª–æ–Ω–æ–≤ –±–æ—Ç–æ–≤ (–ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –±–æ—Ç–æ–≤!)
('DEFAULT_AI_MODEL', 'gpt-4o-mini', 'AI –º–æ–¥–µ–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è –Ω–æ–≤—ã—Ö –±–æ—Ç–æ–≤', 'template', 'string'),
('DEFAULT_MAX_TOKENS', '4000', '–ú–∞–∫—Å–∏–º—É–º —Ç–æ–∫–µ–Ω–æ–≤ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é', 'template', 'integer'),
('DEFAULT_TEMPERATURE', '0.7', '–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é', 'template', 'float'),
('DEFAULT_CATEGORIZATION_PROMPT', '–ê–Ω–∞–ª–∏–∑–∏—Ä—É–π –ø–æ—Å—Ç—ã –ø–æ —Å–ª–µ–¥—É—é—â–∏–º –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º:\n1. –ù–û–í–û–°–¢–ò - –ø–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–±—ã—Ç–∏—è, —ç–∫–æ–Ω–æ–º–∏–∫–∞, –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏\n2. –¢–ï–•–ù–û–õ–û–ì–ò–ò - IT, –≥–∞–¥–∂–µ—Ç—ã, –Ω–∞—É—á–Ω—ã–µ –æ—Ç–∫—Ä—ã—Ç–∏—è\n3. –ö–£–õ–¨–¢–£–†–ê - –∏—Å–∫—É—Å—Å—Ç–≤–æ, —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è, —Å–ø–æ—Ä—Ç\n4. –í–û–ô–ù–ê - –≤–æ–µ–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è, –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã, –æ–±–æ—Ä–æ–Ω–∞\n\n–û–ø—Ä–µ–¥–µ–ª–∏ –Ω–∞–∏–±–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—â—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ—Å—Ç–∞.', '–ü—Ä–æ–º–ø—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é', 'template', 'string'),
('DEFAULT_SUMMARIZATION_PROMPT', '–°–æ–∑–¥–∞–≤–∞–π –∫—Ä–∞—Ç–∫–∏–µ —Ä–µ–∑—é–º–µ –ø–æ—Å—Ç–æ–≤:\n- –ú–∞–∫—Å–∏–º—É–º 2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è\n- –§–æ–∫—É—Å –Ω–∞ –∫–ª—é—á–µ–≤—ã—Ö —Ñ–∞–∫—Ç–∞—Ö\n- –ù–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π —Ç–æ–Ω –±–µ–∑ —ç–º–æ—Ü–∏–π\n- –£–∫–∞–∑—ã–≤–∞–π –∏—Å—Ç–æ—á–Ω–∏–∫ –µ—Å–ª–∏ –≤–∞–∂–Ω–æ', '–ü—Ä–æ–º–ø—Ç —Å–∞–º–º–∞—Ä–∏–∑–∞—Ü–∏–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é', 'template', 'string'),
('DEFAULT_MAX_POSTS_PER_DIGEST', '10', '–ú–∞–∫—Å–∏–º—É–º –ø–æ—Å—Ç–æ–≤ –≤ –¥–∞–π–¥–∂–µ—Å—Ç–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é', 'template', 'integer'),
('DEFAULT_MAX_SUMMARY_LENGTH', '150', '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ —Ä–µ–∑—é–º–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é', 'template', 'integer'),
('DEFAULT_DIGEST_LANGUAGE', 'ru', '–Ø–∑—ã–∫ –¥–∞–π–¥–∂–µ—Å—Ç–æ–≤ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é', 'template', 'string'),
('DEFAULT_WELCOME_MESSAGE', 'ü§ñ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –≠—Ç–æ—Ç –±–æ—Ç –±—É–¥–µ—Ç –ø—Ä–∏—Å—ã–ª–∞—Ç—å –≤–∞–º –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–π–¥–∂–µ—Å—Ç—ã –Ω–æ–≤–æ—Å—Ç–µ–π.', '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é', 'template', 'string'),
('DEFAULT_DELIVERY_SCHEDULE', '{"monday": ["08:00", "19:00"], "tuesday": ["08:00", "19:00"], "wednesday": ["08:00", "19:00"], "thursday": ["08:00", "19:00"], "friday": ["08:00", "19:00"], "saturday": ["10:00"], "sunday": ["10:00"]}', '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–æ—Å—Ç–∞–≤–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é', 'template', 'json'),
('DEFAULT_TIMEZONE', 'Europe/Moscow', '–ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é', 'template', 'string')
ON CONFLICT (key) DO NOTHING;

-- =====================================================
-- 10. –õ–û–ì–ò–†–û–í–ê–ù–ò–ï –ò –ó–ê–í–ï–†–®–ï–ù–ò–ï
-- =====================================================

-- –õ–æ–≥–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ unified —Å—Ö–µ–º—ã
SELECT log_migration('001_unified_database_schema', 'Complete unified database schema with Backend compatibility - –≤—Å–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –æ–±—ä–µ–¥–∏–Ω–µ–Ω—ã + legacy –ø–æ–ª—è –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å Backend');

COMMIT;

-- –£—Å–ø–µ—à–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ
\echo 'üéâ UNIFIED DATABASE SCHEMA CREATED SUCCESSFULLY!'
\echo '‚úÖ –í—Å–µ —Ç–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã'
\echo '‚úÖ –ò–Ω–¥–µ–∫—Å—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã' 
\echo '‚úÖ –ë–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã'
\echo '‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ' 