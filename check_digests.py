import requests
import json

# –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–∞–π–¥–∂–µ—Å—Ç—ã
response = requests.get('http://localhost:8000/api/digests')
digests = response.json()

print(f"–í—Å–µ–≥–æ –¥–∞–π–¥–∂–µ—Å—Ç–æ–≤: {len(digests)}")

# –ù–∞–π–¥–µ–º –¥–∞–π–¥–∂–µ—Å—Ç—ã —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ (–Ω–µ debug/test)
real_digests = [d for d in digests if not any(word in d['digest_id'].lower() for word in ['debug', 'test', 'simple'])]

print(f"–†–µ–∞–ª—å–Ω—ã—Ö –¥–∞–π–¥–∂–µ—Å—Ç–æ–≤: {len(real_digests)}")
print("\n–ü–æ—Å–ª–µ–¥–Ω–∏–µ 3 —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–π–¥–∂–µ—Å—Ç–∞:")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–π–¥–∂–µ—Å—Ç—ã
for digest in real_digests[-3:]:
    print(f"\nüîç –î–∞–π–¥–∂–µ—Å—Ç ID: {digest['digest_id']}")
    print(f"–î–∞—Ç–∞: {digest.get('processed_at', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')}")
    print(f"–í—Å–µ–≥–æ –ø–æ—Å—Ç–æ–≤: {digest.get('total_posts', 0)}")
    print(f"–†–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö: {digest.get('relevant_posts', 0)}")
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–∞–π–¥–∂–µ—Å—Ç–∞
    detail_response = requests.get(f"http://localhost:8000/api/digests/{digest['digest_id']}/data")
    if detail_response.status_code == 200:
        digest_data = detail_response.json()
        
        # –ò—â–µ–º –ø–æ—Å—Ç—ã —Å –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π "–°–®–ê"
        usa_posts = []
        all_categories = set()
        all_posts_info = []
        
        if 'channels' in digest_data:
            for channel in digest_data['channels']:
                if 'posts' in channel:
                    for post in channel['posts']:
                        post_category = post.get('post_category', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')
                        all_categories.add(post_category)
                        
                        all_posts_info.append({
                            'title': post.get('title', '–ë–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞')[:50] + '...',
                            'channel': channel.get('name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫–∞–Ω–∞–ª'),
                            'category': post_category,
                            'ai_assigned_category': post.get('ai_assigned_category', '–ù–µ—Ç')
                        })
                        
                        if post_category == '–°–®–ê':
                            usa_posts.append(all_posts_info[-1])
        
        if usa_posts:
            print(f"  ‚úÖ –ù–∞–π–¥–µ–Ω—ã –ø–æ—Å—Ç—ã —Å –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π –°–®–ê: {len(usa_posts)}")
            for post in usa_posts:
                print(f"    - {post['title']}")
                print(f"      –ö–∞–Ω–∞–ª: {post['channel']}, AI –∫–∞—Ç–µ–≥–æ—Ä–∏—è: {post['ai_assigned_category']}")
        else:
            print("  ‚ùå –ü–æ—Å—Ç–æ–≤ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π '–°–®–ê' –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            
        print(f"  üìä –í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ –¥–∞–π–¥–∂–µ—Å—Ç–µ: {', '.join(sorted(all_categories))}")
        
        # –ü–æ–∫–∞–∂–µ–º –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ—Å—Ç–æ–≤ –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
        if all_posts_info:
            print(f"  üì∞ –ü—Ä–∏–º–µ—Ä—ã –ø–æ—Å—Ç–æ–≤ (–ø–µ—Ä–≤—ã–µ 3):")
            for i, post in enumerate(all_posts_info[:3]):
                print(f"    {i+1}. {post['title']}")
                print(f"       –ö–∞—Ç–µ–≥–æ—Ä–∏—è: '{post['category']}' | AI: '{post['ai_assigned_category']}'")

# –ü—Ä–æ–≤–µ—Ä–∏–º —Ç–∞–∫–∂–µ –∫–∞–∫–∏–µ –∫–∞–Ω–∞–ª—ã –∞–∫—Ç–∏–≤–Ω—ã
print(f"\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∫–∞–Ω–∞–ª—ã:")
channels_response = requests.get('http://localhost:8000/api/channels?active_only=true')
if channels_response.status_code == 200:
    channels = channels_response.json()
    for channel in channels:
        topics = [t['name'] for t in channel.get('topics', [])]
        print(f"  üì∫ {channel['title']} (@{channel.get('username', 'unknown')})")
        print(f"     –ö–∞—Ç–µ–≥–æ—Ä–∏–∏: {', '.join(topics)}") 