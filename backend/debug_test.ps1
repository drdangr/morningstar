# –ü–æ—à–∞–≥–æ–≤—ã–π debug —Ç–µ—Å—Ç
Write-Host "üîç Debug —Ç–µ—Å—Ç - –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—è –ø–æ –æ–¥–Ω–æ–º—É..." -ForegroundColor Green

function Test-DigestData($data, $testName) {
    $json = $data | ConvertTo-Json
    Write-Host "`nüß™ –¢–µ—Å—Ç: $testName" -ForegroundColor Yellow
    Write-Host "JSON: $json" -ForegroundColor Cyan
    
    try {
        $response = Invoke-WebRequest -Uri "http://localhost:8000/api/digests" -Method POST -ContentType "application/json" -Body $json
        Write-Host "‚úÖ Status: $($response.StatusCode)" -ForegroundColor Green
        return $true
    } catch {
        Write-Host "‚ùå –û—à–∏–±–∫–∞: $($_.Exception.Message)" -ForegroundColor Red
        if ($_.Exception.Response) {
            $reader = [System.IO.StreamReader]::new($_.Exception.Response.GetResponseStream())
            $responseBody = $reader.ReadToEnd()
            Write-Host "–î–µ—Ç–∞–ª–∏: $responseBody" -ForegroundColor Yellow
        }
        return $false
    }
}

# –¢–µ—Å—Ç 1: —Ç–æ–ª—å–∫–æ digest_id (—É–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç)
$test1 = @{
    digest_id = "debug_test_1"
}
Test-DigestData $test1 "–¢–æ–ª—å–∫–æ digest_id"

# –¢–µ—Å—Ç 2: –¥–æ–±–∞–≤–ª—è–µ–º integer –ø–æ–ª—è
$test2 = @{
    digest_id = "debug_test_2"
    total_posts = 4
    channels_processed = 2
}
Test-DigestData $test2 "–° integer –ø–æ–ª—è–º–∏"

# –¢–µ—Å—Ç 3: –¥–æ–±–∞–≤–ª—è–µ–º float –ø–æ–ª—è
$test3 = @{
    digest_id = "debug_test_3"
    total_posts = 4
    channels_processed = 2
    avg_importance = [double]8.0
    avg_urgency = [double]6.75
}
Test-DigestData $test3 "–° float –ø–æ–ª—è–º–∏"

# –¢–µ—Å—Ç 4: –¥–æ–±–∞–≤–ª—è–µ–º boolean –ø–æ–ª—è
$test4 = @{
    digest_id = "debug_test_4"
    total_posts = 4
    channels_processed = 2
    avg_importance = [double]8.0
    binary_relevance_applied = $true
    with_metrics = $true
}
Test-DigestData $test4 "–° boolean –ø–æ–ª—è–º–∏"

# –¢–µ—Å—Ç 5: –¥–æ–±–∞–≤–ª—è–µ–º –¥–∞—Ç—É (–ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ!)
$test5 = @{
    digest_id = "debug_test_5"
    total_posts = 4
    binary_relevance_applied = $true
    processed_at = "2025-12-08T10:00:00Z"
}
Test-DigestData $test5 "–° –¥–∞—Ç–æ–π (ISO —Ñ–æ—Ä–º–∞—Ç)"

Write-Host "`nüéØ Debug –∑–∞–≤–µ—Ä—à–µ–Ω!" -ForegroundColor Green 