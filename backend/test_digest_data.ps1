# –¢–µ—Å—Ç –ø—Ä–æ–±–ª–µ–º–Ω–æ–≥–æ –ø–æ–ª—è digest_data
Write-Host "üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª–µ digest_data..." -ForegroundColor Green

function Test-DigestData($data, $testName) {
    $json = $data | ConvertTo-Json -Depth 10
    Write-Host "`nüß™ –¢–µ—Å—Ç: $testName" -ForegroundColor Yellow
    Write-Host "JSON: $json" -ForegroundColor Cyan
    
    try {
        $response = Invoke-WebRequest -Uri "http://localhost:8000/api/digests" -Method POST -ContentType "application/json" -Body $json
        Write-Host "‚úÖ Status: $($response.StatusCode)" -ForegroundColor Green
        return $true
    } catch {
        Write-Host "‚ùå –û—à–∏–±–∫–∞: $($_.Exception.Message)" -ForegroundColor Red
        if ($_.Exception.Response) {
            $reader = [System.IO.StreamReader]::new($_.Exception.Response.GetResponseStream())
            $responseBody = $reader.ReadToEnd()
            Write-Host "–î–µ—Ç–∞–ª–∏: $responseBody" -ForegroundColor Yellow
        }
        return $false
    }
}

# –¢–µ—Å—Ç 1: –° –ø—Ä–æ—Å—Ç–æ–π —Å—Ç—Ä–æ–∫–æ–π –≤ digest_data
$test1 = @{
    digest_id = "digest_data_test_1"
    digest_data = "–ø—Ä–æ—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞"
}
Test-DigestData $test1 "–° –ø—Ä–æ—Å—Ç–æ–π —Å—Ç—Ä–æ–∫–æ–π –≤ digest_data"

# –¢–µ—Å—Ç 2: –° JSON —Å—Ç—Ä–æ–∫–æ–π –≤ digest_data (–ü–û–î–û–ó–†–ò–¢–ï–õ–¨–ù–û!)
$test2 = @{
    digest_id = "digest_data_test_2"
    digest_data = '{"channels":[{"title":"Breaking Mash","username":"@breakingmash","posts_count":2}]}'
}
Test-DigestData $test2 "–° JSON —Å—Ç—Ä–æ–∫–æ–π –≤ digest_data"

# –¢–µ—Å—Ç 3: –ü–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–∞–∫ –≤ –∏—Å—Ö–æ–¥–Ω–æ–º —Ç–µ—Å—Ç–µ
$test3 = @{
    digest_id = "digest_data_test_3"
    total_posts = 4
    channels_processed = 2
    original_posts = 10
    relevant_posts = 4
    avg_importance = [double]8.0
    avg_urgency = [double]6.75
    avg_significance = [double]7.5
    binary_relevance_applied = $true
    with_metrics = $true
    digest_data = '{"channels":[{"title":"Breaking Mash","username":"@breakingmash","posts_count":2}]}'
    processed_at = "2025-12-08T10:00:00Z"
}
Test-DigestData $test3 "–ü–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–∏—Å—Ö–æ–¥–Ω—ã–π —Ç–µ—Å—Ç)"

Write-Host "`nüéØ –¢–µ—Å—Ç digest_data –∑–∞–≤–µ—Ä—à–µ–Ω!" -ForegroundColor Green 