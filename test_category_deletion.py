#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —É–¥–∞–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å user_subscriptions
"""

import requests
import json
from datetime import datetime

BASE_URL = "http://localhost:8000/api"

def test_category_deletion():
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –£–î–ê–õ–ï–ù–ò–Ø –ö–ê–¢–ï–ì–û–†–ò–ô")
    print("=" * 50)
    
    try:
        # 1. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
        print("1Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏...")
        category_data = {
            "category_name": f"Test_Category_{datetime.now().strftime('%H%M%S')}",
            "description": "–¢–µ—Å—Ç–æ–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è",
            "is_active": True
        }
        
        response = requests.post(f"{BASE_URL}/categories", json=category_data)
        if response.status_code != 201:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: {response.status_code}")
            print(f"Response: {response.text}")
            return
        
        category = response.json()
        category_id = category['id']
        print(f"‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è —Å–æ–∑–¥–∞–Ω–∞ —Å ID: {category_id}")
        
        # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        print(f"2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏...")
        response = requests.get(f"{BASE_URL}/categories/{category_id}")
        if response.status_code != 200:
            print(f"‚ùå –ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {response.status_code}")
            return
        print("‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–∞–π–¥–µ–Ω–∞")
        
        # 3. –ü—ã—Ç–∞–µ–º—Å—è —É–¥–∞–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é
        print(f"3Ô∏è‚É£ –£–¥–∞–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ID: {category_id}...")
        response = requests.delete(f"{BASE_URL}/categories/{category_id}")
        
        if response.status_code == 200:
            print("‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞")
            print("üéâ –ü–†–û–ë–õ–ï–ú–ê –° –£–î–ê–õ–ï–ù–ò–ï–ú –ö–ê–¢–ï–ì–û–†–ò–ô –†–ï–®–ï–ù–ê!")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: {response.status_code}")
            print(f"Response: {response.text}")
            
            if "user_subscriptions.user_id does not exist" in response.text:
                print("\nüö® –ù–ê–ô–î–ï–ù–ê –ü–†–û–ë–õ–ï–ú–ê:")
                print("–¢–∞–±–ª–∏—Ü–∞ user_subscriptions –∏–º–µ–µ—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É")
                print("–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Å—Ç–æ–ª–±–µ—Ü user_id")
                print("\nüí° –†–ï–®–ï–ù–ò–ï:")
                print("–ù—É–∂–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å backend –∏ –∏—Å–ø—Ä–∞–≤–∏—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã")
        
        # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —É–¥–∞–ª–µ–Ω–∞
        print(f"4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è...")
        response = requests.get(f"{BASE_URL}/categories/{category_id}")
        if response.status_code == 404:
            print("‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —É–¥–∞–ª–µ–Ω–∞")
        elif response.status_code == 200:
            print("‚ö†Ô∏è –ö–∞—Ç–µ–≥–æ—Ä–∏—è –≤—Å—ë –µ—â—ë —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —É–¥–∞–ª–µ–Ω–∏–µ –Ω–µ–ø–æ–ª–Ω–æ–µ")
        
    except requests.exceptions.ConnectionError:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ backend")
        print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ backend –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:8000")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def check_backend_status():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ backend"""
    try:
        response = requests.get(f"{BASE_URL}/health")
        if response.status_code == 200:
            print("‚úÖ Backend –¥–æ—Å—Ç—É–ø–µ–Ω")
            return True
        else:
            print(f"‚ö†Ô∏è Backend –æ—Ç–≤–µ—á–∞–µ—Ç —Å –∫–æ–¥–æ–º: {response.status_code}")
            return False
    except:
        print("‚ùå Backend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        return False

if __name__ == "__main__":
    if check_backend_status():
        test_category_deletion()
    else:
        print("–ó–∞–ø—É—Å—Ç–∏—Ç–µ backend –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞") 