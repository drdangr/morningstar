#!/usr/bin/env pwsh
# MorningStarBot3 - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ –≤—Å–µ–π —Å–∏—Å—Ç–µ–º—ã
# –ó–∞–ø—É—Å–∫: .\start-system.ps1

Write-Host "üöÄ –ó–∞–ø—É—Å–∫ MorningStarBot3 —Å–∏—Å—Ç–µ–º—ã..." -ForegroundColor Green

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if (-not (Test-Path "backend") -or -not (Test-Path "userbot")) {
    Write-Host "‚ùå –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞ MorningStarBot3" -ForegroundColor Red
    exit 1
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —á—Ç–æ –ø–æ—Ä—Ç —Å–≤–æ–±–æ–¥–µ–Ω
function Test-Port($port) {
    $connection = Test-NetConnection -ComputerName localhost -Port $port -InformationLevel Quiet -WarningAction SilentlyContinue
    return -not $connection
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–∞
function Wait-ForService($name, $url, $timeout = 30) {
    Write-Host "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ $name..." -ForegroundColor Yellow
    $count = 0
    do {
        Start-Sleep 2
        $count += 2
        try {
            $response = Invoke-WebRequest -Uri $url -Method GET -TimeoutSec 5 2>$null
            if ($response.StatusCode -eq 200) {
                Write-Host "‚úÖ $name –∑–∞–ø—É—â–µ–Ω!" -ForegroundColor Green
                return $true
            }
        } catch {
            # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–∂–∏–¥–∞–Ω–∏–µ
        }
    } while ($count -lt $timeout)
    
    Write-Host "‚ùå $name –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –∑–∞ $timeout —Å–µ–∫—É–Ω–¥" -ForegroundColor Red
    return $false
}

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
Write-Host "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤..." -ForegroundColor Yellow
Get-Process -Name "node" -ErrorAction SilentlyContinue | Where-Object { $_.ProcessName -eq "node" } | Stop-Process -Force -ErrorAction SilentlyContinue
Get-Process -Name "python" -ErrorAction SilentlyContinue | Where-Object { $_.CommandLine -like "*backend*" -or $_.CommandLine -like "*bot.py*" } | Stop-Process -Force -ErrorAction SilentlyContinue

Start-Sleep 3

try {
    # 1. –ó–∞–ø—É—Å–∫ Backend API
    Write-Host "üîß –ó–∞–ø—É—Å–∫ Backend API..." -ForegroundColor Cyan
    if (-not (Test-Port 8000)) {
        Write-Host "‚ö†Ô∏è –ü–æ—Ä—Ç 8000 –∑–∞–Ω—è—Ç, –ø–æ–ø—ã—Ç–∫–∞ –æ—Å–≤–æ–±–æ–¥–∏—Ç—å..." -ForegroundColor Yellow
        netstat -ano | findstr :8000 | ForEach-Object { 
            $processId = ($_ -split '\s+')[-1]
            if ($processId -match '^\d+$') {
                Stop-Process -Id $processId -Force -ErrorAction SilentlyContinue
            }
        }
        Start-Sleep 2
    }
    
    $backendProcess = Start-Process -FilePath "python" -ArgumentList "backend/main.py" -WindowStyle Hidden -PassThru
    Write-Host "üìã Backend PID: $($backendProcess.Id)" -ForegroundColor Gray
    
    # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ Backend
    if (-not (Wait-ForService "Backend API" "http://localhost:8000/api/channels")) {
        throw "Backend API –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è"
    }

    # 2. –ó–∞–ø—É—Å–∫ N8N
    Write-Host "üîó –ó–∞–ø—É—Å–∫ N8N..." -ForegroundColor Cyan
    if (-not (Test-Port 5678)) {
        Write-Host "‚ö†Ô∏è –ü–æ—Ä—Ç 5678 –∑–∞–Ω—è—Ç, –ø–æ–ø—ã—Ç–∫–∞ –æ—Å–≤–æ–±–æ–¥–∏—Ç—å..." -ForegroundColor Yellow
        netstat -ano | findstr :5678 | ForEach-Object { 
            $processId = ($_ -split '\s+')[-1]
            if ($processId -match '^\d+$') {
                Stop-Process -Id $processId -Force -ErrorAction SilentlyContinue
            }
        }
        Start-Sleep 2
    }
    
    $n8nProcess = Start-Process -FilePath "npx" -ArgumentList "n8n", "start", "--tunnel" -WindowStyle Hidden -PassThru
    Write-Host "üìã N8N PID: $($n8nProcess.Id)" -ForegroundColor Gray
    
    # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ N8N
    if (-not (Wait-ForService "N8N" "http://localhost:5678/healthz")) {
        throw "N8N –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è"
    }

    # 3. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∏–º–ø–æ—Ä—Ç workflow
    Write-Host "üì¶ –ò–º–ø–æ—Ä—Ç N8N workflow..." -ForegroundColor Cyan
    Start-Sleep 5  # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –ø–æ–ª–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ N8N
    
    # –ü–æ–ø—ã—Ç–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ workflow —á–µ—Ä–µ–∑ API
    try {
        $workflowPath = "n8n/workflows/telegram-digest-workflow.json"
        if (Test-Path $workflowPath) {
            $workflowContent = Get-Content $workflowPath -Raw | ConvertFrom-Json
            $importPayload = @{
                "workflow" = $workflowContent
            } | ConvertTo-Json -Depth 20
            
            $headers = @{
                "Content-Type" = "application/json"
            }
            
            # –ò–º–ø–æ—Ä—Ç workflow
            $importResponse = Invoke-RestMethod -Uri "http://localhost:5678/rest/workflows/import" -Method POST -Body $importPayload -Headers $headers
            Write-Host "‚úÖ Workflow –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω: $($importResponse.name)" -ForegroundColor Green
            
            # –ê–∫—Ç–∏–≤–∞—Ü–∏—è workflow
            if ($importResponse.id) {
                $activatePayload = @{ "active" = $true } | ConvertTo-Json
                Invoke-RestMethod -Uri "http://localhost:5678/rest/workflows/$($importResponse.id)/activate" -Method POST -Body $activatePayload -Headers $headers
                Write-Host "‚úÖ Workflow –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!" -ForegroundColor Green
            }
        } else {
            Write-Host "‚ö†Ô∏è Workflow —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: $workflowPath" -ForegroundColor Yellow
        }
    } catch {
        Write-Host "‚ö†Ô∏è –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∏–º–ø–æ—Ä—Ç –Ω–µ —É–¥–∞–ª—Å—è, –∏–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –≤—Ä—É—á–Ω—É—é —á–µ—Ä–µ–∑ http://localhost:5678" -ForegroundColor Yellow
        Write-Host "   –§–∞–π–ª: n8n/workflows/telegram-digest-workflow.json" -ForegroundColor Gray
    }

    # 4. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–ø—É—â–µ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ
    Write-Host "`nüéâ –°–∏—Å—Ç–µ–º–∞ MorningStarBot3 –∑–∞–ø—É—â–µ–Ω–∞!" -ForegroundColor Green
    Write-Host "üìã –ü—Ä–æ—Ü–µ—Å—Å—ã:" -ForegroundColor White
    Write-Host "   ‚Ä¢ Backend API: http://localhost:8000 (PID: $($backendProcess.Id))" -ForegroundColor Gray
    Write-Host "   ‚Ä¢ N8N: http://localhost:5678 (PID: $($n8nProcess.Id))" -ForegroundColor Gray
    Write-Host "   ‚Ä¢ Admin Panel: http://localhost:3000 (–∑–∞–ø—É—Å—Ç–∏—Ç–µ –æ—Ç–¥–µ–ª—å–Ω–æ)" -ForegroundColor Gray
    
    Write-Host "`nüîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:" -ForegroundColor White
    Write-Host "   ‚Ä¢ –ó–∞–ø—É—Å–∫ Userbot: cd userbot && python src/bot.py" -ForegroundColor Gray
    Write-Host "   ‚Ä¢ –û—Å—Ç–∞–Ω–æ–≤–∫–∞: .\stop-system.ps1" -ForegroundColor Gray
    Write-Host "   ‚Ä¢ –õ–æ–≥–∏ N8N: Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏" -ForegroundColor Gray
    
    Write-Host "`n‚úÖ –ì–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ!" -ForegroundColor Green
    Write-Host "–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–∏—Å—Ç–µ–º—ã..." -ForegroundColor Yellow
    
    # –û–∂–∏–¥–∞–Ω–∏–µ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è
    try {
        while ($true) {
            Start-Sleep 1
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø—Ä–æ—Ü–µ—Å—Å—ã –µ—â–µ –∂–∏–≤—ã
            if ($backendProcess.HasExited) {
                Write-Host "‚ùå Backend –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à–∏–ª—Å—è" -ForegroundColor Red
                break
            }
            if ($n8nProcess.HasExited) {
                Write-Host "‚ùå N8N –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à–∏–ª—Å—è" -ForegroundColor Red
                break
            }
        }
    } catch {
        Write-Host "`nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏..." -ForegroundColor Yellow
    }
    
} catch {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: $($_.Exception.Message)" -ForegroundColor Red
} finally {
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
    Write-Host "`nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã..." -ForegroundColor Yellow
    
    if ($backendProcess -and -not $backendProcess.HasExited) {
        $backendProcess.Kill()
        Write-Host "   ‚úÖ Backend –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" -ForegroundColor Gray
    }
    
    if ($n8nProcess -and -not $n8nProcess.HasExited) {
        $n8nProcess.Kill()
        Write-Host "   ‚úÖ N8N –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" -ForegroundColor Gray
    }
    
    Write-Host "üèÅ –°–∏—Å—Ç–µ–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞." -ForegroundColor Green
} 