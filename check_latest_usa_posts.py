import requests
import json
from datetime import datetime, timedelta

# –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–∞–π–¥–∂–µ—Å—Ç—ã
response = requests.get('http://localhost:8000/api/digests')
digests = response.json()

print(f"–í—Å–µ–≥–æ –¥–∞–π–¥–∂–µ—Å—Ç–æ–≤: {len(digests)}")

# –ò—â–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–∞–π–¥–∂–µ—Å—Ç—ã —Å –ø–æ—Å—Ç–∞–º–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "–°–®–ê"
usa_found_digests = []

for digest in digests[-10:]:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10
    digest_id = digest['digest_id']
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–∞–π–¥–∂–µ—Å—Ç–∞
    detail_response = requests.get(f"http://localhost:8000/api/digests/{digest_id}/data")
    if detail_response.status_code == 200:
        digest_data = detail_response.json()
        
        # –ò—â–µ–º –ø–æ—Å—Ç—ã —Å –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π "–°–®–ê"
        usa_posts = []
        
        if 'channels' in digest_data:
            for channel in digest_data['channels']:
                if 'posts' in channel:
                    for post in channel['posts']:
                        if post.get('post_category') == '–°–®–ê':
                            usa_posts.append({
                                'title': post.get('title', '–ë–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞')[:80] + '...',
                                'channel': channel.get('title', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫–∞–Ω–∞–ª'),
                                'date': post.get('date'),
                                'category': post.get('post_category'),
                                'ai_assigned': post.get('ai_assigned_category')
                            })
        
        if usa_posts:
            usa_found_digests.append({
                'digest_id': digest_id,
                'processed_at': digest.get('processed_at'),
                'usa_posts_count': len(usa_posts),
                'usa_posts': usa_posts
            })

print(f"\nüá∫üá∏ –ù–∞–π–¥–µ–Ω–æ –¥–∞–π–¥–∂–µ—Å—Ç–æ–≤ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π '–°–®–ê': {len(usa_found_digests)}")

if usa_found_digests:
    for digest_info in usa_found_digests[-3:]:  # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 3
        print(f"\nüìä –î–∞–π–¥–∂–µ—Å—Ç: {digest_info['digest_id']}")
        print(f"   –î–∞—Ç–∞: {digest_info['processed_at']}")
        print(f"   –ü–æ—Å—Ç–æ–≤ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π '–°–®–ê': {digest_info['usa_posts_count']}")
        
        for i, post in enumerate(digest_info['usa_posts'], 1):
            print(f"   {i}. {post['title']}")
            print(f"      –ö–∞–Ω–∞–ª: {post['channel']}")
            print(f"      –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {post['category']} | AI: {post['ai_assigned']}")
            print(f"      –î–∞—Ç–∞: {post['date']}")
else:
    print("‚ùå –î–∞–π–¥–∂–µ—Å—Ç–æ–≤ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π '–°–®–ê' –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ Backend API")

# –ü—Ä–æ–≤–µ—Ä–∏–º —Ç–∞–∫–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –ø–æ–¥–ø–∏—Å–∫–æ–π –Ω–∞ "–°–®–ê"
print(f"\nüë§ –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø–æ–¥–ø–∏—Å–∫–æ–π –Ω–∞ '–°–®–ê':")
users_response = requests.get('http://localhost:8000/api/users')
if users_response.status_code == 200:
    users = users_response.json()
    for user in users:
        subscriptions_response = requests.get(f"http://localhost:8000/api/users/{user['telegram_id']}/subscriptions")
        if subscriptions_response.status_code == 200:
            subscriptions = subscriptions_response.json()
            usa_subscribed = any(sub['category_name'] == '–°–®–ê' for sub in subscriptions)
            if usa_subscribed:
                print(f"   üì± –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user['first_name']} (ID: {user['telegram_id']}) –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ '–°–®–ê'")
                print(f"      –ü–æ–¥–ø–∏—Å–∫–∏: {[sub['category_name'] for sub in subscriptions]}") 