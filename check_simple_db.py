#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã user_subscriptions
"""

from sqlalchemy import create_engine, text
import os
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–∫ –≤ backend/main.py
DB_HOST = os.getenv("DB_HOST", "localhost")
DB_PORT = os.getenv("DB_PORT", "5432")
DB_NAME = os.getenv("DB_NAME", "digest_bot")
DB_USER = os.getenv("DB_USER", "digest_bot")
DB_PASSWORD = os.getenv("DB_PASSWORD", "SecurePassword123!")

DATABASE_URL = f"postgresql://{DB_USER}:{DB_PASSWORD}@{DB_HOST}:{DB_PORT}/{DB_NAME}"

def main():
    try:
        print("üîç –ü–†–û–í–ï–†–ö–ê –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø –ö POSTGRESQL")
        print("=" * 50)
        print(f"Host: {DB_HOST}")
        print(f"Port: {DB_PORT}")
        print(f"Database: {DB_NAME}")
        print(f"User: {DB_USER}")
        
        engine = create_engine(DATABASE_URL, echo=False)
        
        with engine.connect() as conn:
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
            result = conn.execute(text("SELECT 1 as test"))
            print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ: {result.fetchone()}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã user_subscriptions
            result = conn.execute(text("""
                SELECT EXISTS (
                    SELECT FROM information_schema.tables 
                    WHERE table_name = 'user_subscriptions'
                )
            """))
            table_exists = result.fetchone()[0]
            print(f"üìã –¢–∞–±–ª–∏—Ü–∞ user_subscriptions —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {'‚úÖ –î–ê' if table_exists else '‚ùå –ù–ï–¢'}")
            
            if table_exists:
                # –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
                result = conn.execute(text("""
                    SELECT column_name, data_type, is_nullable
                    FROM information_schema.columns 
                    WHERE table_name = 'user_subscriptions' 
                    ORDER BY ordinal_position
                """))
                columns = result.fetchall()
                
                print("\nüìä –°–¢–†–£–ö–¢–£–†–ê –¢–ê–ë–õ–ò–¶–´ user_subscriptions:")
                for col in columns:
                    print(f"  ‚Ä¢ {col[0]}: {col[1]} ({'NULL' if col[2] == 'YES' else 'NOT NULL'})")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ user_id
                user_id_exists = any(col[0] == 'user_id' for col in columns)
                print(f"\nüîç –°—Ç–æ–ª–±–µ—Ü user_id: {'‚úÖ –ï–°–¢–¨' if user_id_exists else '‚ùå –û–¢–°–£–¢–°–¢–í–£–ï–¢'}")
                
                if not user_id_exists:
                    print("\nüö® –ù–ê–ô–î–ï–ù–ê –ü–†–û–ë–õ–ï–ú–ê!")
                    print("SQLAlchemy –º–æ–¥–µ–ª—å –æ–∂–∏–¥–∞–µ—Ç —Å—Ç–æ–ª–±–µ—Ü user_id, –Ω–æ –µ–≥–æ –Ω–µ—Ç –≤ –±–∞–∑–µ.")
                    print("–≠—Ç–æ –æ–±—ä—è—Å–Ω—è–µ—Ç –æ—à–∏–±–∫–∏ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π.")
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∏–º–µ–Ω–Ω–æ –µ—Å—Ç—å –≤ —Ç–∞–±–ª–∏—Ü–µ
                    result = conn.execute(text("SELECT COUNT(*) FROM user_subscriptions"))
                    count = result.fetchone()[0]
                    print(f"üìà –ó–∞–ø–∏—Å–µ–π –≤ —Ç–∞–±–ª–∏—Ü–µ: {count}")
                    
                    if count > 0:
                        result = conn.execute(text("SELECT * FROM user_subscriptions LIMIT 3"))
                        rows = result.fetchall()
                        print("üìã –ü–µ—Ä–≤—ã–µ –∑–∞–ø–∏—Å–∏:")
                        for row in rows:
                            print(f"  ‚Ä¢ {row}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—Ä—É–≥–∏–µ —Ç–∞–±–ª–∏—Ü—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –ø—Ä–æ–±–ª–µ–º–æ–π
            for table in ['users', 'categories']:
                result = conn.execute(text(f"""
                    SELECT EXISTS (
                        SELECT FROM information_schema.tables 
                        WHERE table_name = '{table}'
                    )
                """))
                exists = result.fetchone()[0]
                print(f"üìã –¢–∞–±–ª–∏—Ü–∞ {table} —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {'‚úÖ –î–ê' if exists else '‚ùå –ù–ï–¢'}")
                
                if exists:
                    result = conn.execute(text(f"SELECT COUNT(*) FROM {table}"))
                    count = result.fetchone()[0]
                    print(f"  üìà –ó–∞–ø–∏—Å–µ–π: {count}")
        
        print("\n‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏: {e}")
        print("\nüîß –í–û–ó–ú–û–ñ–ù–´–ï –†–ï–®–ï–ù–ò–Ø:")
        print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –∑–∞–ø—É—â–µ–Ω –ª–∏ PostgreSQL")
        print("2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ .env —Ñ–∞–π–ª–µ")
        print("3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å digest_bot —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")

if __name__ == "__main__":
    main() 