#!/usr/bin/env python3
"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ PostgreSQL –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ –ø–∞—Ä–æ–ª–∏ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
"""
import psycopg2
from urllib.parse import quote_plus

# –í–æ–∑–º–æ–∂–Ω—ã–µ –ø–∞—Ä–æ–ª–∏ (–∏–∑ –∏—Å—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞)
POSSIBLE_PASSWORDS = [
    "Demiurg12@",           # –¢–µ–∫—É—â–∏–π –∏–∑ –ø–∞–º—è—Ç–∏
    "SecurePassword123!",   # –°—Ç–∞—Ä—ã–π –∏–∑ backend/main.py  
    "password",             # –î–µ—Ñ–æ–ª—Ç–Ω—ã–π
    "postgres",             # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π
    "12345",                # –ü—Ä–æ—Å—Ç–æ–π
    "",                     # –ü—É—Å—Ç–æ–π
]

# –¢–µ—Å—Ç–∏—Ä—É–µ–º—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
USERS = ["digest_bot", "postgres"]

def test_connection(user, password, database="postgres"):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL"""
    try:
        # URL encoding –¥–ª—è –ø–∞—Ä–æ–ª—è
        encoded_password = quote_plus(password) if password else ""
        
        print(f"üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º: {user} / {'*' * len(password) if password else '(–ø—É—Å—Ç–æ–π)'} ‚Üí {database}")
        
        conn = psycopg2.connect(
            host="localhost",
            port=5432,
            user=user,
            password=password,
            database=database
        )
        
        # –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
        cursor = conn.cursor()
        cursor.execute("SELECT version();")
        version = cursor.fetchone()[0]
        
        cursor.close()
        conn.close()
        
        print(f"‚úÖ –£–°–ü–ï–•! {user}:{password} ‚Üí {database}")
        print(f"   PostgreSQL –≤–µ—Ä—Å–∏—è: {version[:50]}...")
        return True
        
    except psycopg2.OperationalError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")
        return False
    except Exception as e:
        print(f"‚ö†Ô∏è  –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {str(e)}")
        return False

def main():
    print("üîß –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê POSTGRESQL –ê–£–¢–ï–ù–¢–ò–§–ò–ö–ê–¶–ò–ò")
    print("=" * 50)
    
    success_combinations = []
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏
    for user in USERS:
        print(f"\nüë§ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨: {user}")
        print("-" * 30)
        
        for password in POSSIBLE_PASSWORDS:
            if test_connection(user, password):
                success_combinations.append((user, password))
                
                # –ï—Å–ª–∏ —É—Å–ø–µ—à–Ω–æ —Å –±–∞–∑–æ–≤–æ–π –ë–î, –ø—Ä–æ–≤–µ—Ä—è–µ–º digest_bot –ë–î
                if user == "postgres":
                    print(f"   üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ digest_bot –ë–î...")
                    if test_connection(user, password, "digest_bot"):
                        print(f"   ‚úÖ {user} –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø –∫ digest_bot!")
        
        print()
    
    print("\n" + "=" * 50)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´:")
    
    if success_combinations:
        print("‚úÖ –£—Å–ø–µ—à–Ω—ã–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:")
        for user, password in success_combinations:
            print(f"   ‚Ä¢ {user} : {password}")
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è digest_bot
        print(f"\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è digest_bot...")
        for user, password in success_combinations:
            if user == "postgres":
                try_check_digest_bot_user(password)
                break
    else:
        print("‚ùå –ù–ï–¢ –£–°–ü–ï–®–ù–´–• –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–ô!")
        print("–ü—Ä–æ–±–ª–µ–º–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤:")
        print("  ‚Ä¢ pg_hba.conf –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö")
        print("  ‚Ä¢ –°–ª—É–∂–±–µ PostgreSQL")
        print("  ‚Ä¢ –í—Å–µ –ø–∞—Ä–æ–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–µ")

def try_check_digest_bot_user(postgres_password):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è digest_bot —á–µ—Ä–µ–∑ postgres —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    try:
        conn = psycopg2.connect(
            host="localhost",
            port=5432,
            user="postgres",
            password=postgres_password,
            database="postgres"
        )
        
        cursor = conn.cursor()
        cursor.execute("SELECT usename FROM pg_user WHERE usename = 'digest_bot';")
        result = cursor.fetchone()
        
        if result:
            print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å digest_bot –°–£–©–ï–°–¢–í–£–ï–¢")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞
            cursor.execute("SELECT datname FROM pg_database WHERE datname = 'digest_bot';")
            db_result = cursor.fetchone()
            
            if db_result:
                print(f"‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö digest_bot –°–£–©–ï–°–¢–í–£–ï–¢")
            else:
                print(f"‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö digest_bot –ù–ï –°–£–©–ï–°–¢–í–£–ï–¢")
        else:
            print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å digest_bot –ù–ï –°–£–©–ï–°–¢–í–£–ï–¢")
            print(f"üí° –ù—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è digest_bot")
        
        cursor.close()
        conn.close()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ digest_bot: {e}")

if __name__ == "__main__":
    main() 