#!/usr/bin/env python3
"""
–ü–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü SQLAlchemy —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π
"""

import sys
import os
sys.path.append(os.path.join(os.path.dirname(__file__), 'backend'))

from backend.main import Base, engine, SessionLocal
from sqlalchemy import text

def main():
    print("üîß –ü–ï–†–ï–°–û–ó–î–ê–ù–ò–ï –¢–ê–ë–õ–ò–¶ SQLALCHEMY")
    print("=" * 50)
    
    try:
        # –°–æ–∑–¥–∞–µ–º –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã –∑–∞–Ω–æ–≤–æ
        print("üìã –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü...")
        Base.metadata.create_all(bind=engine)
        print("‚úÖ –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã/–æ–±–Ω–æ–≤–ª–µ–Ω—ã")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É user_subscriptions
        with engine.connect() as conn:
            result = conn.execute(text("""
                SELECT column_name, data_type, is_nullable
                FROM information_schema.columns 
                WHERE table_name = 'user_subscriptions' 
                ORDER BY ordinal_position
            """))
            columns = result.fetchall()
            
            print("\nüìä –°–¢–†–£–ö–¢–£–†–ê –¢–ê–ë–õ–ò–¶–´ user_subscriptions:")
            for col in columns:
                print(f"  ‚Ä¢ {col[0]}: {col[1]} ({'NULL' if col[2] == 'YES' else 'NOT NULL'})")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω—É–∂–Ω—ã—Ö —Å—Ç–æ–ª–±—Ü–æ–≤
            column_names = [col[0] for col in columns]
            user_id_exists = 'user_id' in column_names
            category_id_exists = 'category_id' in column_names
            
            print(f"\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–æ–ª–±—Ü–æ–≤:")
            print(f"  ‚Ä¢ user_id: {'‚úÖ –ï–°–¢–¨' if user_id_exists else '‚ùå –û–¢–°–£–¢–°–¢–í–£–ï–¢'}")
            print(f"  ‚Ä¢ category_id: {'‚úÖ –ï–°–¢–¨' if category_id_exists else '‚ùå –û–¢–°–£–¢–°–¢–í–£–ï–¢'}")
            
            if user_id_exists and category_id_exists:
                print("\nüéâ –°–¢–†–£–ö–¢–£–†–ê –¢–ê–ë–õ–ò–¶–´ –ò–°–ü–†–ê–í–õ–ï–ù–ê!")
                print("–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å backend")
            else:
                print("\n‚ùå –ü–†–û–ë–õ–ï–ú–ê –ù–ï –†–ï–®–ï–ù–ê")
                print("–í–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–Ω–æ –≤—Ä—É—á–Ω—É—é —Å–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    main() 