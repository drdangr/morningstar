#!/usr/bin/env python3
"""
–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Ç–µ—Å—Ç –≤—Å–µ—Ö CRUD –æ–ø–µ—Ä–∞—Ü–∏–π
–ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –∫–∞–Ω–∞–ª—ã
"""

import requests
import json
from datetime import datetime

BASE_URL = "http://localhost:8000/api"

def test_categories_crud():
    print("üìã –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï CRUD –û–ü–ï–†–ê–¶–ò–ô –î–õ–Ø –ö–ê–¢–ï–ì–û–†–ò–ô")
    print("=" * 60)
    
    timestamp = datetime.now().strftime('%H%M%S')
    category_id = None
    
    try:
        # 1. CREATE - –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        print("1Ô∏è‚É£ CREATE - –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏...")
        category_data = {
            "category_name": f"Test_Category_{timestamp}",
            "description": "–¢–µ—Å—Ç–æ–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è –¥–ª—è CRUD",
            "is_active": True
        }
        
        response = requests.post(f"{BASE_URL}/categories", json=category_data)
        if response.status_code == 201:
            category = response.json()
            category_id = category['id']
            print(f"‚úÖ CREATE —Ä–∞–±–æ—Ç–∞–µ—Ç - ID: {category_id}")
        else:
            print(f"‚ùå CREATE –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {response.status_code}")
            return False
        
        # 2. READ - –ß—Ç–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        print("2Ô∏è‚É£ READ - –ß—Ç–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏...")
        response = requests.get(f"{BASE_URL}/categories/{category_id}")
        if response.status_code == 200:
            print("‚úÖ READ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        else:
            print(f"‚ùå READ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {response.status_code}")
        
        # 3. UPDATE - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        print("3Ô∏è‚É£ UPDATE - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏...")
        update_data = {
            "category_name": f"Updated_Category_{timestamp}",
            "description": "–û–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ",
            "is_active": True
        }
        
        response = requests.put(f"{BASE_URL}/categories/{category_id}", json=update_data)
        if response.status_code == 200:
            print("‚úÖ UPDATE —Ä–∞–±–æ—Ç–∞–µ—Ç")
        else:
            print(f"‚ùå UPDATE –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {response.status_code}")
            print(f"Response: {response.text}")
        
        # 4. DELETE - –£–¥–∞–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        print("4Ô∏è‚É£ DELETE - –£–¥–∞–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏...")
        response = requests.delete(f"{BASE_URL}/categories/{category_id}")
        if response.status_code == 200:
            print("‚úÖ DELETE —Ä–∞–±–æ—Ç–∞–µ—Ç")
            return True
        else:
            print(f"‚ùå DELETE –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {response.status_code}")
            print(f"Response: {response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {e}")
        return False

def test_channels_crud():
    print("\nüì∫ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï CRUD –û–ü–ï–†–ê–¶–ò–ô –î–õ–Ø –ö–ê–ù–ê–õ–û–í")
    print("=" * 60)
    
    timestamp = datetime.now().strftime('%H%M%S')
    channel_id = None
    
    try:
        # 1. CREATE - –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞
        print("1Ô∏è‚É£ CREATE - –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞...")
        channel_data = {
            "channel_name": f"test_channel_{timestamp}",
            "telegram_id": int(f"1000{timestamp}"),  # –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID
            "username": f"test_user_{timestamp}",
            "title": f"Test Channel {timestamp}",
            "description": "–¢–µ—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª –¥–ª—è CRUD",
            "is_active": True
        }
        
        response = requests.post(f"{BASE_URL}/channels", json=channel_data)
        if response.status_code == 201:
            channel = response.json()
            channel_id = channel['id']
            print(f"‚úÖ CREATE —Ä–∞–±–æ—Ç–∞–µ—Ç - ID: {channel_id}")
        else:
            print(f"‚ùå CREATE –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {response.status_code}")
            print(f"Response: {response.text}")
            return False
        
        # 2. READ - –ß—Ç–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞
        print("2Ô∏è‚É£ READ - –ß—Ç–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞...")
        response = requests.get(f"{BASE_URL}/channels/{channel_id}")
        if response.status_code == 200:
            print("‚úÖ READ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        else:
            print(f"‚ùå READ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {response.status_code}")
        
        # 3. UPDATE - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞
        print("3Ô∏è‚É£ UPDATE - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞...")
        update_data = {
            "channel_name": f"updated_channel_{timestamp}",
            "telegram_id": channel_data["telegram_id"],  # –¢–æ—Ç –∂–µ ID
            "username": f"updated_user_{timestamp}",
            "title": f"Updated Channel {timestamp}",
            "description": "–û–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞",
            "is_active": True
        }
        
        response = requests.put(f"{BASE_URL}/channels/{channel_id}", json=update_data)
        if response.status_code == 200:
            print("‚úÖ UPDATE —Ä–∞–±–æ—Ç–∞–µ—Ç")
        else:
            print(f"‚ùå UPDATE –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {response.status_code}")
            print(f"Response: {response.text}")
        
        # 4. DELETE - –£–¥–∞–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞
        print("4Ô∏è‚É£ DELETE - –£–¥–∞–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞...")
        response = requests.delete(f"{BASE_URL}/channels/{channel_id}")
        if response.status_code == 200:
            print("‚úÖ DELETE —Ä–∞–±–æ—Ç–∞–µ—Ç")
            return True
        else:
            print(f"‚ùå DELETE –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {response.status_code}")
            print(f"Response: {response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ –∫–∞–Ω–∞–ª–æ–≤: {e}")
        return False

def check_backend_status():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ backend"""
    try:
        response = requests.get(f"{BASE_URL}/health")
        if response.status_code == 200:
            print("‚úÖ Backend –¥–æ—Å—Ç—É–ø–µ–Ω")
            return True
        else:
            print(f"‚ö†Ô∏è Backend –æ—Ç–≤–µ—á–∞–µ—Ç —Å –∫–æ–¥–æ–º: {response.status_code}")
            return False
    except:
        print("‚ùå Backend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        return False

def main():
    print("üß™ –ö–û–ú–ü–õ–ï–ö–°–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï CRUD –û–ü–ï–†–ê–¶–ò–ô")
    print("=" * 70)
    
    if not check_backend_status():
        print("–ó–∞–ø—É—Å—Ç–∏—Ç–µ backend –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞")
        return
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    categories_ok = test_categories_crud()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–∞–Ω–∞–ª—ã  
    channels_ok = test_channels_crud()
    
    # –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    print("\nüìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢:")
    print("=" * 30)
    print(f"–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ CRUD: {'‚úÖ –í–°–ï –†–ê–ë–û–¢–ê–ï–¢' if categories_ok else '‚ùå –ï–°–¢–¨ –ü–†–û–ë–õ–ï–ú–´'}")
    print(f"–ö–∞–Ω–∞–ª—ã CRUD: {'‚úÖ –í–°–ï –†–ê–ë–û–¢–ê–ï–¢' if channels_ok else '‚ùå –ï–°–¢–¨ –ü–†–û–ë–õ–ï–ú–´'}")
    
    if not categories_ok:
        print("\nüö® –ù–ê–ô–î–ï–ù–ê –ü–†–û–ë–õ–ï–ú–ê –° –ö–ê–¢–ï–ì–û–†–ò–Ø–ú–ò:")
        print("–£–¥–∞–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ user_subscriptions.user_id")
    
    if categories_ok and channels_ok:
        print("\nüéâ –í–°–ï CRUD –û–ü–ï–†–ê–¶–ò–ò –†–ê–ë–û–¢–ê–Æ–¢ –ö–û–†–†–ï–ö–¢–ù–û!")

if __name__ == "__main__":
    main() 