import asyncio
import aiohttp
import json

async def fix_collection_depth_setting():
    """–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ COLLECTION_DEPTH_DAYS"""
    
    print("üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ù–ê–°–¢–†–û–ô–ö–ò COLLECTION_DEPTH_DAYS")
    print("=" * 50)
    
    backend_url = "http://localhost:8000"
    
    # –®–∞–≥ 1: –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
    print("\n1. üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ...")
    
    try:
        async with aiohttp.ClientSession() as session:
            async with session.get(f"{backend_url}/api/config/COLLECTION_DEPTH_DAYS") as response:
                if response.status == 200:
                    data = await response.json()
                    current_value = data.get('value')
                    print(f"üîç –¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: {current_value} –¥–Ω–µ–π")
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: {response.status}")
                    return
    except Exception as e:
        print(f"üí• –û—à–∏–±–∫–∞: {e}")
        return
    
    # –®–∞–≥ 2: –ü–æ–ª—É—á–∞–µ–º ID –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    print("\n2. üîç –ò—â–µ–º ID –Ω–∞—Å—Ç—Ä–æ–π–∫–∏...")
    
    setting_id = None
    try:
        async with aiohttp.ClientSession() as session:
            async with session.get(f"{backend_url}/api/settings") as response:
                if response.status == 200:
                    settings = await response.json()
                    for setting in settings:
                        if setting['key'] == 'COLLECTION_DEPTH_DAYS':
                            setting_id = setting['id']
                            print(f"‚úÖ –ù–∞–π–¥–µ–Ω ID –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: {setting_id}")
                            break
                    
                    if not setting_id:
                        print("‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∞ COLLECTION_DEPTH_DAYS –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
                        return
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫: {response.status}")
                    return
    except Exception as e:
        print(f"üí• –û—à–∏–±–∫–∞: {e}")
        return
    
    # –®–∞–≥ 3: –û–±–Ω–æ–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ 3 –¥–Ω—è
    print("\n3. üîß –û–±–Ω–æ–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ 3 –¥–Ω—è...")
    
    new_value = "3"
    update_data = {
        "value": new_value,
        "description": "–°–∫–æ–ª—å–∫–æ –¥–Ω–µ–π –Ω–∞–∑–∞–¥ —Å–æ–±–∏—Ä–∞—Ç—å –ø–æ—Å—Ç—ã –∏–∑ –∫–∞–Ω–∞–ª–æ–≤ (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ)"
    }
    
    try:
        async with aiohttp.ClientSession() as session:
            async with session.put(
                f"{backend_url}/api/settings/{setting_id}",
                json=update_data,
                headers={"Content-Type": "application/json"}
            ) as response:
                if response.status == 200:
                    updated_setting = await response.json()
                    print(f"‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!")
                    print(f"üìä –ù–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: {updated_setting['value']} –¥–Ω–µ–π")
                    print(f"üìù –û–ø–∏—Å–∞–Ω–∏–µ: {updated_setting['description']}")
                else:
                    response_text = await response.text()
                    print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {response.status}")
                    print(f"üìÑ –û—Ç–≤–µ—Ç: {response_text}")
                    return
    except Exception as e:
        print(f"üí• –û—à–∏–±–∫–∞: {e}")
        return
    
    # –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    print("\n4. ‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç...")
    
    try:
        async with aiohttp.ClientSession() as session:
            async with session.get(f"{backend_url}/api/config/COLLECTION_DEPTH_DAYS") as response:
                if response.status == 200:
                    data = await response.json()
                    final_value = data.get('value')
                    print(f"üéâ –ò—Ç–æ–≥–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: {final_value} –¥–Ω–µ–π")
                    
                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —ç—Ñ—Ñ–µ–∫—Ç
                    collection_hours = int(final_value) * 24
                    print(f"‚è∞ –í —á–∞—Å–∞—Ö: {collection_hours} —á–∞—Å–æ–≤")
                    print(f"üìä –¢–µ–ø–µ—Ä—å –±—É–¥—É—Ç —Å–æ–±–∏—Ä–∞—Ç—å—Å—è –ø–æ—Å—Ç—ã –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ {final_value} –¥–Ω—è!")
                    
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏: {response.status}")
    except Exception as e:
        print(f"üí• –û—à–∏–±–∫–∞: {e}")
    
    print("\n" + "=" * 50)
    print("üéØ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!")
    print("üí° –¢–µ–ø–µ—Ä—å userbot –±—É–¥–µ—Ç —Å–æ–±–∏—Ä–∞—Ç—å –ø–æ—Å—Ç—ã –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 –¥–Ω—è")
    print("üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ userbot –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π")

async def main():
    await fix_collection_depth_setting()

if __name__ == "__main__":
    asyncio.run(main()) 