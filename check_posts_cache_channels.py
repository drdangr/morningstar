#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞–Ω–∞–ª–æ–≤ –≤ posts_cache —Ç–∞–±–ª–∏—Ü–µ
"""

import requests
import json

def check_posts_cache_channels():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∫–∏–µ –∫–∞–Ω–∞–ª—ã –µ—Å—Ç—å –≤ posts_cache"""
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É posts_cache
        response = requests.get('http://localhost:8000/api/posts/stats')
        response.raise_for_status()
        data = response.json()
        
        print("üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê POSTS_CACHE:")
        print(f"–í—Å–µ–≥–æ –ø–æ—Å—Ç–æ–≤: {data['total_posts']}")
        print(f"–ö–∞–Ω–∞–ª–æ–≤ –≤ –±–∞–∑–µ: {len(data['channels'])}")
        print()
        
        print("üîç –î–ï–¢–ê–õ–ò–ó–ê–¶–ò–Ø –ü–û –ö–ê–ù–ê–õ–ê–ú:")
        for i, channel in enumerate(data['channels'], 1):
            print(f"{i}. Telegram ID: {channel['telegram_id']}")
            print(f"   Title: {channel.get('title', 'N/A')}")
            print(f"   Username: {channel.get('username', 'N/A')}")  
            print(f"   –ü–æ—Å—Ç–æ–≤: {channel['posts_count']}")
            print(f"   –ü–æ—Å–ª–µ–¥–Ω–∏–π —Å–±–æ—Ä: {channel['last_collected']}")
            print(f"   –ú–∞–∫—Å –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤: {channel.get('max_views', 0):,}")
            print()
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤
        print("üîç –ê–ö–¢–ò–í–ù–´–ï –ö–ê–ù–ê–õ–´ –ò–ó CHANNELS –¢–ê–ë–õ–ò–¶–´:")
        response2 = requests.get('http://localhost:8000/api/channels?active_only=true')
        response2.raise_for_status()
        channels_data = response2.json()
        
        print(f"–ê–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤ –≤ channels: {len(channels_data)}")
        for channel in channels_data:
            print(f"- {channel['title']} (@{channel['username']}) - ID: {channel['telegram_id']}")
        
        print()
        print("‚ùì –ê–ù–ê–õ–ò–ó –†–ê–°–•–û–ñ–î–ï–ù–ò–Ø:")
        posts_cache_ids = {c['telegram_id'] for c in data['channels']}
        active_channel_ids = {c['telegram_id'] for c in channels_data}
        
        extra_in_cache = posts_cache_ids - active_channel_ids
        if extra_in_cache:
            print(f"‚ö†Ô∏è –í posts_cache –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ –æ—Ç –∫–∞–Ω–∞–ª–æ–≤, –∫–æ—Ç–æ—Ä—ã—Ö –ù–ï–¢ –≤ –∞–∫—Ç–∏–≤–Ω—ã—Ö:")
            for telegram_id in extra_in_cache:
                cache_channel = next(c for c in data['channels'] if c['telegram_id'] == telegram_id)
                print(f"   - ID: {telegram_id}, –ü–æ—Å—Ç–æ–≤: {cache_channel['posts_count']}")
        else:
            print("‚úÖ –í—Å–µ –∫–∞–Ω–∞–ª—ã –∏–∑ posts_cache —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –∞–∫—Ç–∏–≤–Ω—ã–º –∫–∞–Ω–∞–ª–∞–º")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    check_posts_cache_channels() 